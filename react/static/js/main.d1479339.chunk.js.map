{"version":3,"sources":["context/AppContext.ts","components/DropDownMenu.tsx","components/Header.tsx","components/Footer.tsx","containers/home/HomePageView.tsx","configuration.ts","services/base-service.ts","types/EPageStatus.ts","components/ButtonFollow.tsx","components/FilterList.tsx","components/Loader.tsx","components/Alert.tsx","containers/artist/ArtistDiscoverView.tsx","containers/artist/EPlayerState.ts","containers/musicgenres/MusicGenresView.tsx","containers/artist/BecomeAnArtistView.tsx","components/LikeButton.tsx","components/AddToCartButton.tsx","components/CommentSection.tsx","components/AudioPlayer.ts","containers/artist/ArtistDetailsView.tsx","containers/artist/ArtistEdit.tsx","containers/artist/ArtistDelete.tsx","components/MakeOrderButton.tsx","dto/ICart.ts","containers/cart/UserCartView.tsx","services/account-service.ts","containers/account/Login.tsx","containers/product/EProductUploadState.ts","types/IRegisterForm.ts","containers/account/Register.tsx","containers/Page404.tsx","containers/PageForm.tsx","containers/account/Profile.tsx","containers/account/FavoriteList.tsx","containers/product/UploadProductView.tsx","containers/track/TrackInfoComponent.tsx","containers/track/TracksList.tsx","containers/product/UploadTracksView.tsx","containers/product/ProductUploadView.tsx","containers/account/LikedProducts.tsx","containers/product/ProductManageView.tsx","dto/IProduct.ts","containers/product/ProductDetailedView.tsx","App.tsx","index.tsx"],"names":["initialAppState","token","firstName","lastName","cart","total","quantity","artistId","isArtist","favorites","likedProducts","setAuthInfo","setUserRole","getUserFavorites","getUserLikedProducts","getUserId","updateUserFavoriteArtistList","updateUserLikedProductsList","updateUserCart","promoteToTempArtist","clearAppState","AppContext","React","createContext","AppContextProvider","Provider","Consumer","DropDownMenu","props","useState","style","setStyle","handleClickOnMenu","className","onClick","id","to","logOut","Header","appState","useContext","history","useHistory","role","src","alt","push","Footer","href","HomeIndex","ApiBaseUrl","ServerUrl","BaseService","headers","Authorization","apiEndpoint","queryParams","this","axios","get","getAxiosConfiguration","response","ok","status","statusCode","data","error","messages","console","log","entity","entityString","JSON","stringify","post","formData","FormData","append","title","trackNumber","trackFile","image","description","price","toString","secondPrice","i","tracks","length","productTypeId","musicGenreId","productFormatId","put","delete","Axios","create","baseURL","EPageStatus","ButtonFollow","following","followState","setFollowState","setClassName","handleFollow","a","sendData","followers","artistFollowersCount","updateArtistsFollowers","index","setTimeout","undefined","removeArtistFromFavoriteList","useEffect","item","find","loadData","FilterList","filterisChanged","setFilterState","filters","setFilters","callback","artists","filteredList","handleArtistChange","filter","artistMusicGenres","g","genre","filterArtistList","genres","map","type","value","e","target","includes","newfilters","f","handleChange","htmlFor","EAlertClass","Loader","pageStatus","Loading","Error","ArtistRowDisplay","artist","imagePath","name","bio","ArtistIndex","initialArtists","setInitialArtists","setArtists","musicGenres","setMusicGenres","setPageStatus","getArtists","useCallback","getAll","OK","getMusicGenres","EPlayerState","Alert","show","alertClass","message","MusicGenresDisplay","onChange","addMusicGenre","ArtistCreate","appUserId","artistData","setArtistData","alertMessage","setAlertMessage","submitClicked","placeholder","minLength","required","musicgenre","m","changedMusicgenres","Danger","initialHeartStyle","LikeButton","liked","likeState","setLikeState","heartStyle","setHeartStyle","handleLike","dataForm","productId","productIndex","likesAfterUpdate","likesAfterRemove","ButtonAddToCart","handleClick","CommentRow","comment","text","appUserImage","width","appUserName","published","CommentSection","productComments","setProductComments","userComment","setUserComment","compStyle","setCompStyle","handleCommentUpload","key","loadComments","product","onKeyPress","initialPlayer","serverLocation","player","play","pause","stop","setSrc","isPlaying","audioPlayer","Audio","currentTime","connctionString","TrackRowDisplay","played","setPlayed","handlePlayAction","trackId","track","handlePlay","trackIndex","playCountAfterUpdate","playerState","Playing","setPlayerState","OnPause","fileLocation","playCount","duration","substring","ProductRowDisplay","float","sort","t1","t2","b","viewBuy","handleViewComments","likes","viewLike","marginLeft","format","ARTIST_VIEW_STYLE","ArtistDetails","alias","useParams","setArtist","setPlayer","pageLayoutStatus","setPageLayoutStatus","toggled","commentSectionState","setCommentSectionState","products","plays","ArtistEdit","ArtistDelete","MakeOrderButton","handleOrderClick","updateCartData","initialCartDetails","cartProducts","productsInOrders","CartDetails","cartData","setCartData","userId","p","Success","AccountService","loginData","loginDataJson","registerData","email","password","birthday","countryName","imageFile","EProductUploadState","Login","setLoginData","loginClicked","v-model","intialRegisterForm","Register","countries","setCountries","confirmPassword","setConfirmPassword","setRegisterData","registerClicked","preventDefault","result","country","accept","files","Page404","FormView","action","values","input","initialFormValues","checkbox","radio","textarea","select","PageForm","formValues","setFormValues","initialArtisteditForm","Profile","setFormData","handleUpdateClick","FavoriteList","FormREquiredDataInitial","productTypes","productFormats","ProductUploadFormInitial","UploadProductView","formRequiredData","setFormRequiredData","getData","uploadedTracksIds","productTypesResponse","productFromatsResponse","musicGenresResponse","postProduct","handleTitleChange","handleDescriptionChange","handlePriceChange","handleSecondPriceChange","producTypeId","formatId","TrackInfoComponent","trackData","handleTrackNumberUpdate","handleTrackTitleUpdate","removeAddedFile","TrackList","setTracks","filteredTracks","t","updateTracks","UploadTracksView","saveFilesToState","multiple","hidden","tracksState","tracksToUpload","updateTracksInState","uploadClicked","ProductUpload","setTracksState","NotUploaded","uploadState","setUploaded","mappedFiles","Array","from","uploadTracksToServer","Uploaded","receivedTrackIdsFromResponse","forEach","postTracks","receivedTrack","OnNetwork","removeProductFromLikedProductList","userLikeItem","updateProductsList","artistName","LikedProductsList","setProducts","handleProductRemove","itemId","ProductManageView","initialProductDetailed","uploadDate","comments","ProductDetailedView","setProduct","productTitle","App","loginResponse","favoriteList","userLikedProducts","setAppState","curState","dataFromToken","jwt_decode","Object","keys","exact","path","component","render","LikedProducts","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1479339.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { ICartSimple } from \"../dto/ICart\";\r\nimport { IFavoriteListItem } from \"../dto/IFavoriteList\";\r\nimport { IUserLikeListItem } from \"../dto/IUserLike\";\r\nimport { ILoginResponse } from \"../types/ILoginResponse\";\r\nimport { IRegisterResponse } from \"../types/IRegisterResponse\";\r\n\r\nexport interface IAppState {\r\n    token: string | null;\r\n    firstName: string;\r\n    lastName: string;\r\n    cart: ICartSimple;\r\n    artistId: string | null;\r\n    isArtist: boolean;\r\n    favorites: IFavoriteListItem[];\r\n    likedProducts: IUserLikeListItem[];\r\n    setAuthInfo: (lohinResponse: ILoginResponse | IRegisterResponse) => void;\r\n    setUserRole: (token: string) => void;\r\n    getUserFavorites: (token: string) => void;\r\n    getUserLikedProducts: (token: string) => void;\r\n    getUserId: (token: string) => string;\r\n    updateUserFavoriteArtistList: (curState: IAppState) => void;\r\n    updateUserLikedProductsList: (curState: IAppState) => void;\r\n    updateUserCart: (curState: IAppState) => void;\r\n    promoteToTempArtist: (curState: IAppState, artistId: string) => void;\r\n    clearAppState: (curState: IAppState) => void;\r\n}\r\n\r\nexport const initialAppState: IAppState = {\r\n    token: null,\r\n    firstName: '',\r\n    lastName: '',\r\n    cart: { total: 0, quantity: 0 },\r\n    artistId: null,\r\n    isArtist: false,\r\n    favorites: [],\r\n    likedProducts: [],\r\n    setAuthInfo: (): void => { },\r\n    setUserRole: (): void => { },\r\n    getUserFavorites: () => { },\r\n    getUserLikedProducts: () => { },\r\n    getUserId: (): string => '',\r\n    updateUserFavoriteArtistList: () => { },\r\n    updateUserLikedProductsList: () => { },\r\n    updateUserCart: () => { },\r\n    promoteToTempArtist: (): void => { },\r\n    clearAppState: (): void => { }\r\n}\r\n\r\nexport const AppContext = React.createContext<IAppState>(initialAppState);\r\nexport const AppContextProvider = AppContext.Provider;\r\nexport const AppContextConsumer = AppContext.Consumer;\r\n","import { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./DropDownMenu.css\";\r\n\r\nconst DropDownMenu = (props: { isArtist: boolean, logOut: Function }) => {\r\n    let [style, setStyle] = useState(\"dropdown-content\");\r\n\r\n    const handleClickOnMenu = () => {\r\n        if (style !== \"dropdown-content\") setStyle(\"dropdown-content\");\r\n        else setStyle(style += \" show\");\r\n    }\r\n\r\n    const handleLogOut = () => {\r\n        props.logOut();\r\n        handleClickOnMenu();\r\n    }\r\n\r\n    return (\r\n\r\n        <li className=\"nav-item-dropdown flex-fill dropdown \">\r\n            <button onClick={handleClickOnMenu} className=\"nav-link dropdown-toggle text-dark\" id=\"navbarDropdown\">Menu</button>\r\n            <div id=\"myDropdown\" className={style}>\r\n                <NavLink onClick={handleClickOnMenu} className=\"btn btn-link nav-link text-light\" to='/you/profile'>Your profile</NavLink>\r\n                {props.isArtist ?\r\n                    <NavLink onClick={handleClickOnMenu} className=\"btn btn-link nav-link text-light\" to='/you/products'>Manage products</NavLink>\r\n                    : null\r\n                }\r\n                <NavLink onClick={handleClickOnMenu} className=\"btn btn-link nav-link text-light\" to='/you/likes'>Your liked products</NavLink>\r\n                <NavLink onClick={handleClickOnMenu} className=\"btn btn-link nav-link text-light\" to='/you/favorites'>Favorite list</NavLink>\r\n                <button onClick={handleLogOut} className=\"btn btn-link nav-link text-light\">Sign out</button>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default DropDownMenu;\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport DropDownMenu from \"./DropDownMenu\";\r\nimport \"./Header.css\"\r\n\r\nconst Header = () => {\r\n    const appState = useContext(AppContext);\r\n    const history = useHistory();\r\n    const imgUrl = 'https://pngimg.com/uploads/shopping_cart/shopping_cart_PNG38.png';\r\n    \r\n    return (\r\n        <header className=\"navbar navbar-expand-sm navbar-toggleable-sm navbar-dark box-shadow\">\r\n            <nav className=\"navbar-collapse collapse d-sm-inline-flex justify-content-between\" role=\"navigation\">\r\n                <ul className=\"navbar-nav flex-grow-1 d-flex\">\r\n                    <li className=\"nav-item flex-fill\">\r\n                        <NavLink className=\"nav-link text-light\" to=\"/artists\">Discover</NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item flex-fill\">\r\n                        <NavLink className=\"navbar-brand text-light\" to=\"/\"\r\n                        >Identikit</NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item flex-fill\">\r\n                        {appState.token === null ?\r\n                            <NavLink className=\"nav-link text-light\" to=\"/account/login?#\">Become an artist</NavLink> : null\r\n                        }\r\n                        {appState.token !== null && appState.isArtist === false ?\r\n                            <NavLink className=\"nav-link text-light\" to=\"/artists/create\">Become an artist</NavLink> : null\r\n                        }\r\n                        {appState.token !== null && appState.isArtist === true ?\r\n                            <NavLink className=\"nav-link text-light\" to=\"/products/upload\">Upload your creation </NavLink> : null\r\n                        }\r\n                    </li>\r\n                    {appState.token !== null ?\r\n                        <li className=\"nav-item cart-icon-header\">\r\n                            <NavLink className=\"btn btn-link nav-link text-light\" to=\"/cart\">\r\n                                <img className=\"cart-image\" src={imgUrl} alt=\"\" />\r\n                                <div className=\"cart-total-quantity\">{appState.cart.total}/{appState.cart.quantity}</div>\r\n                            </NavLink>\r\n                        </li> : null\r\n                    }\r\n                    {appState.token !== null ?\r\n                        <DropDownMenu isArtist={appState.isArtist} logOut={() => {appState.clearAppState(appState); history.push('/')}} /> \r\n                        : null\r\n                    }\r\n                    {appState.token === null ?\r\n                        <li className=\"nav-item flex-fill\">\r\n                            <NavLink className=\"nav-link text-light\" to=\"/account/login\">Sign in</NavLink>\r\n                        </li> : null\r\n                    }\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","const Footer = () => {\r\n    return (\r\n        <footer className=\"border-top footer text-muted\">\r\n            <div className=\"container\">\r\n                &copy; 2021 - Identikit - <a href=\"/Home/Privacy\">Privacy</a>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import { AppContext } from \"../../context/AppContext\";\r\nimport { useContext } from \"react\";\r\n\r\nconst HomeIndex = () => {\r\n    const appState = useContext(AppContext);\r\n\r\n    return (\r\n\r\n        <div className=\"welcome-message\">\r\n            <h3>\r\n                WELCOME TO IDENTIKIT{appState.token ? ', ' + appState.firstName + ' ' + appState.lastName : null}, THE BEST MUSIC DISTRIBUTION PLATFORM EVER!\r\n                </h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeIndex;\r\n","export const ApiBaseUrl = \"https://iivano-identikit.azurewebsites.net/api/v1\";\r\nexport const ServerUrl = \"https://iivano-identikit.azurewebsites.net/\";\r\n","import Axios, { AxiosError, AxiosRequestConfig } from \"axios\";\r\nimport { ApiBaseUrl } from \"../configuration\";\r\nimport { IProductUploadForm } from \"../containers/product/UploadProductView\";\r\nimport { IProduct } from \"../dto/IProduct\";\r\nimport { ITrack, ITrackAdd } from \"../dto/ITrack\";\r\nimport { IFetchResponse } from \"../types/IFetchResponse\";\r\nimport { IMessages } from \"../types/IMessages\";\r\nimport { IQueryParams } from \"../types/IQueryParams\";\r\n\r\nexport abstract class BaseService {\r\n    protected static axios = Axios.create({\r\n        baseURL: ApiBaseUrl,\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    });\r\n    \r\n    protected static getAxiosConfiguration(token?: string): AxiosRequestConfig | undefined {\r\n        if (!token) return undefined;\r\n        const config: AxiosRequestConfig = {\r\n            headers: {\r\n                Authorization: 'Bearer ' + token\r\n            }\r\n        };\r\n        return config;\r\n    };\r\n\r\n    static async getAll<TEntity>(apiEndpoint: string, token?: string, queryParams?: IQueryParams): Promise<IFetchResponse<TEntity[]>> {\r\n        try {\r\n            if (queryParams) {\r\n                apiEndpoint += queryParams;\r\n            }\r\n\r\n            const response = await this.axios.get<TEntity[]>(\r\n                apiEndpoint,\r\n                BaseService.getAxiosConfiguration(token)\r\n            );\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data,\r\n            }; \r\n        } catch (err) {\r\n            const error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            };\r\n        };\r\n    };\r\n\r\n    static async get<TEntity>(apiEndpoint: string, token?: string, queryParams?: IQueryParams): Promise<IFetchResponse<TEntity>> {\r\n        if (queryParams) {\r\n            apiEndpoint += queryParams\r\n        }\r\n\r\n        console.log(apiEndpoint);\r\n        \r\n        try {\r\n            const response = await this.axios.get<TEntity>(\r\n                apiEndpoint,\r\n                BaseService.getAxiosConfiguration(token)\r\n            );\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data,\r\n            }; \r\n        } catch (err) {\r\n            const error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            };\r\n        };\r\n    };\r\n\r\n    static async post<TEntity>(apiEndpoint: string, entity: TEntity, token?: string, queryParams?: IQueryParams): Promise<IFetchResponse<TEntity>> {\r\n        const entityString = JSON.stringify(entity);\r\n\r\n        try {\r\n            const response = await this.axios.post(apiEndpoint,\r\n                entityString,\r\n                BaseService.getAxiosConfiguration(token));\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data,\r\n            }; \r\n        } catch (err) {\r\n            const error = err as AxiosError;\r\n            console.error(error);\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            };\r\n        };\r\n    }\r\n    \r\n    static async postTracks(apiEndpoint: string, entity: ITrackAdd, token: string, queryParams?: IQueryParams): Promise<IFetchResponse<ITrack>> {\r\n        let formData = new FormData();\r\n        formData.append(\"title\", entity.title);\r\n        formData.append(\"trackNumber\", entity.trackNumber);\r\n        formData.append(\"track\", entity.trackFile!);\r\n\r\n        try {\r\n            const response = await this.axios.post(apiEndpoint,\r\n                formData,\r\n                BaseService.getAxiosConfiguration(token));\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data,\r\n            }; \r\n        } catch (err) {\r\n            const error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            };\r\n        };\r\n    }\r\n\r\n    static async postProduct(apiEndpoint: string, entity: IProductUploadForm, token: string, queryParams?: IQueryParams): Promise<IFetchResponse<IProduct>> {\r\n        let formData = new FormData();\r\n        formData.append(\"title\", entity.title);\r\n        formData.append(\"image\", entity.image !== null ? entity.image : '');\r\n        formData.append(\"description\", entity.description);\r\n        formData.append(\"price\", entity.price.toString());\r\n        formData.append(\"secondPrice\", entity.secondPrice !== null ? entity.secondPrice.toString() : '');\r\n        for (let i = 0; i < entity.tracks.length; i++) {\r\n            formData.append(\"tracks[\" + i + \"].id\", entity.tracks[i].id);\r\n        }\r\n        formData.append(\"productTypeId\", entity.productTypeId);\r\n        formData.append(\"musicGenreId\", entity.musicGenreId);\r\n        formData.append(\"productFormatId\", entity.productFormatId);\r\n        \r\n        try {\r\n            const response = await this.axios.post(apiEndpoint,\r\n                formData,\r\n                BaseService.getAxiosConfiguration(token));\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data,\r\n            }; \r\n        } catch (err) {\r\n            const error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            };\r\n        };\r\n    }\r\n\r\n    static async put<TEntity>(apiEndpoint: string, entity: TEntity, token?: string, queryParams?: IQueryParams): Promise<IFetchResponse<TEntity>> {\r\n        const entityString = JSON.stringify(entity);\r\n\r\n        try {\r\n            const response = await this.axios.put(apiEndpoint,\r\n                entityString,\r\n                BaseService.getAxiosConfiguration(token));\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data,\r\n            }; \r\n        } catch (err) {\r\n            const error = err as AxiosError;\r\n            console.error(error);\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            };\r\n        };\r\n    }\r\n\r\n    static async delete<TEntity>(apiEndpoint: string, token?: string, queryParams?: IQueryParams): Promise<IFetchResponse<TEntity>> {\r\n        if (queryParams) {\r\n            apiEndpoint = apiEndpoint + queryParams;\r\n        }\r\n\r\n        try {\r\n            const response = await this.axios.delete(apiEndpoint,\r\n                BaseService.getAxiosConfiguration(token));\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data,\r\n            }; \r\n        } catch (err) {\r\n            const error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            };\r\n        };\r\n    }\r\n}\r\n","export enum EPageStatus {\r\n    Loading = \"Loading...\",\r\n    Error = \"Error...\",\r\n    OK = \"OK\",\r\n}\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport { IFavoriteList } from \"../dto/IFavoriteList\";\r\nimport { BaseService } from \"../services/base-service\";\r\nimport \"./ButtonFollow.css\";\r\n\r\ninterface IFollowButtonProps {\r\n    artistId: string;\r\n    index: number;\r\n    updateArtistsFollowers?: Function;\r\n    removeArtistFromFavoriteList?: Function\r\n}\r\n\r\ninterface IFollowState {\r\n    id?: string;\r\n    following: boolean;\r\n}\r\n\r\nconst ButtonFollow = (props: IFollowButtonProps) => {\r\n    const appState = useContext(AppContext);\r\n    const [followState, setFollowState] = useState({ following: false } as IFollowState);\r\n    let [className, setClassName] = useState('follow-button');\r\n\r\n    const handleFollow = async () => {\r\n        if (!followState.following) {\r\n            const sendData: IFavoriteList = { artistId: props.artistId };\r\n            const response = await BaseService.post<IFavoriteList>('/favoritelists', sendData, appState.token!);\r\n            if (response.ok && response.data) {\r\n                setClassName(className += ' following')\r\n                setFollowState({ id: response.data.id, following: true })\r\n                appState.updateUserFavoriteArtistList(appState);\r\n                const followers = response.data.artistFollowersCount;\r\n                props.updateArtistsFollowers!(props.index, followers);\r\n                console.log(\"You subscribed to this artist\");\r\n            }\r\n        } else {\r\n            const response = await BaseService.delete<IFavoriteList>('/favoritelists/' + followState.id, appState.token!);\r\n            console.log(response);\r\n            \r\n            if (response.ok && response.data) {\r\n                setTimeout(() => setClassName('follow-button'), 200);\r\n                setFollowState({ following: false });\r\n                appState.updateUserFavoriteArtistList(appState);\r\n                const followers = response.data.artistFollowersCount;\r\n                if (props.removeArtistFromFavoriteList !== undefined) props.removeArtistFromFavoriteList!(props.index);\r\n                else if (props.updateArtistsFollowers !== undefined) props.updateArtistsFollowers!(props.index, followers);\r\n                console.log(\"You unsubscribed from this artist\");\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const loadData = async (): Promise<void> => {\r\n            const following = appState.favorites;\r\n            const item = following.find(entity => entity.artistId === props.artistId);\r\n            if (item) {\r\n                setFollowState({ id: item?.id, following: true });\r\n                const newClassName = className + ' following';\r\n                setClassName(newClassName);\r\n            }\r\n        }\r\n        loadData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <button className={className} onClick={handleFollow} />\r\n    );\r\n}\r\n\r\nexport default ButtonFollow;\r\n","import { useEffect, useState } from \"react\";\r\nimport { IArtist } from \"../dto/IArtist\";\r\nimport { IMusicGenre } from \"../dto/IMusicGenre\";\r\nimport \"./FilterList.css\"\r\n\r\ninterface ISortingProps {\r\n    genres: IMusicGenre[];\r\n    artists: IArtist[];\r\n    callback: Function;\r\n}\r\n\r\nconst FilterList = (props: ISortingProps) => {\r\n    /* Handle filter state*/\r\n    const [filterisChanged, setFilterState] = useState(false);\r\n    let [filters, setFilters] = useState([] as string[]);\r\n\r\n    const handleChange = (e: any) => {\r\n        const filter = e.target.value;\r\n        if (filters.includes(filter)) {\r\n            // clear filter\r\n            const newfilters = filters.filter(f => f !== filter);\r\n            setFilters([...newfilters]);\r\n        } else {\r\n            // add filter\r\n            filters.push(filter);\r\n            setFilters([...filters]);\r\n        }\r\n        setFilterState(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (filterisChanged) {\r\n            /* Filter initial artists state */\r\n            const filterArtistList = () => {\r\n                if (filters.length === 0) props.callback([...props.artists])\r\n                const filteredList = props.artists.filter(function (item) {\r\n                    for (let filter of filters) {\r\n                        if (!item.artistMusicGenres.find(g => g.genre === filter)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                });\r\n                /* Update artists state in parent with filtered one */\r\n                const handleArtistChange = (filteredList: IArtist[]) => {\r\n                    props.callback([...filteredList])\r\n                }\r\n                handleArtistChange(filteredList);\r\n                setFilterState(false);\r\n            }\r\n            filterArtistList();\r\n        }\r\n    }, [filterisChanged, filters, props])\r\n\r\n    return (\r\n        <>\r\n            <p>Choose filters</p>\r\n            <div className=\"filter-list\">\r\n                {props.genres.map(genre =>\r\n                    <div className=\"filter\" key={genre.id}>\r\n                        <input type=\"checkbox\" value={genre.genre} onClick={(e) => handleChange(e)} />\r\n                        <label htmlFor=\"musicGenre\">{genre.genre}</label>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FilterList;","import { EPageStatus } from \"../types/EPageStatus\";\r\n\r\nconst Loader = (props: {pageStatus: EPageStatus, statusCode: number}) => {\r\n    if(props.pageStatus === EPageStatus.Loading) {\r\n        return <div>Loading..</div>\r\n    }\r\n    if (props.pageStatus === EPageStatus.Error) {\r\n        return <div className=\"alert alert-danger\">Error... {props.statusCode}</div>\r\n    }\r\n    return <></>\r\n}\r\n\r\nexport default Loader;\r\n","export enum EAlertClass {\r\n    Primary = 'alert-primary',\r\n    Secondary = 'alert-secondary',\r\n    Success = 'alert-success',\r\n    Danger = 'alert-danger',\r\n    Warning = 'alert-warning',\r\n    Info = 'alert-info',\r\n    Light = 'alert-light',\r\n    Dark = 'alert-dark',\r\n}\r\n\r\nconst Alert = (props: {show: boolean, message: string, alertClass: EAlertClass }) => {\r\n    \r\n    return props.show ? <div className={'alert ' + props.alertClass} role=\"alert\">{props.message}</div> : null;\r\n}\r\n\r\nexport default Alert;\r\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ButtonFollow from \"../../components/ButtonFollow\";\r\nimport FilterList from \"../../components/FilterList\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { ServerUrl } from \"../../configuration\";\r\nimport { AppContext, IAppState } from \"../../context/AppContext\";\r\nimport { IArtist } from \"../../dto/IArtist\";\r\nimport { IMusicGenre } from \"../../dto/IMusicGenre\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { IFetchResponse } from \"../../types/IFetchResponse\";\r\nimport \"./ArtistDiscoverView.css\";\r\n\r\n// page status: Loading... => Happy, show data | Error\r\n\r\nexport interface IArtistRowDisplayProps {\r\n    artist: IArtist;\r\n    appState: IAppState;\r\n    index: number;\r\n    updateArtistsFollowers?: Function;\r\n    removeArtistFromFavoriteList?: Function\r\n}\r\n\r\nexport const ArtistRowDisplay = (props: IArtistRowDisplayProps) => (\r\n    <tr>\r\n        <td><img className=\"img-small\" src={ServerUrl + '/images/' + props.artist.imagePath} alt=\"\"></img></td>\r\n        <td><Link to={'/artists/' + props.artist.name}>{props.artist.name}</Link></td>\r\n        <td>{props.artist.bio}</td>\r\n        <td className=\"followers-number\">{props.artist.followers}</td>\r\n        {props.appState.token && props.appState.artistId !== props.artist.id ? <td className=\"follow-button-container\"><ButtonFollow artistId={props.artist.id} index={props.index} updateArtistsFollowers={props.updateArtistsFollowers} /></td> : <td />}\r\n    </tr>\r\n);\r\n\r\nconst ArtistIndex = () => {\r\n    const appState = useContext(AppContext);\r\n    const [initialArtists, setInitialArtists] = useState([] as IArtist[]);\r\n    const [artists, setArtists] = useState([] as IArtist[]);\r\n    const [musicGenres, setMusicGenres] = useState([] as IMusicGenre[]);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    /* Function to update artists followers */\r\n    const updateArtistsFollowers = (index: number, followers: number) => {\r\n        artists[index].followers = followers;\r\n        setArtists([...artists]);\r\n    }\r\n\r\n    /* Get all artists */\r\n    const getArtists = useCallback(async () => {\r\n        let response = {} as IFetchResponse<IArtist[]>;\r\n        response = await BaseService.getAll<IArtist>('/artists/withmusicgenres');\r\n        console.log(response);\r\n        \r\n        if (response.ok && response.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setInitialArtists(response.data)\r\n            setArtists(response.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: response.statusCode });\r\n        }\r\n    }, [])\r\n\r\n    /* Get all music genres */\r\n    const getMusicGenres = async () => {\r\n        const response = await BaseService.getAll<IMusicGenre>('/musicgenres');\r\n        if (response.ok && response.data) {\r\n            setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n            setMusicGenres(response.data);\r\n        } else {\r\n            setPageStatus({ pageStatus: EPageStatus.Error, statusCode: response.statusCode });\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (artists.length === 0 && musicGenres.length === 0) {\r\n            getMusicGenres();\r\n            getArtists()\r\n        }\r\n    }, [artists.length, getArtists, musicGenres.length]);\r\n\r\n    return (\r\n        <>\r\n            <FilterList callback={setArtists} artists={initialArtists} genres={musicGenres} />\r\n            {artists.length > 0 ?\r\n            <>\r\n            <div className=\"view-title\">Artists</div>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th>Name</th>\r\n                        <th>Bio</th>\r\n                        <th className=\"followers-number\">Followers</th>\r\n                        {appState.token ? <th className=\"follow-button-label\">Follow</th> : null}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {artists.map((artist, index) =>\r\n                        <ArtistRowDisplay\r\n                            artist={artist}\r\n                            appState={appState}\r\n                            index={index}\r\n                            updateArtistsFollowers={updateArtistsFollowers}\r\n                            key={artist.id}\r\n                        />\r\n                    )}\r\n                </tbody>\r\n            </table></> : <div>Artists list is empty.</div>}\r\n            <Loader {...pageStatus} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ArtistIndex;\r\n","export enum EPlayerState {\r\n    Playing,\r\n    OnPause,\r\n    Ended\r\n}","import { useEffect, useState } from \"react\";\r\nimport { IMusicGenre } from \"../../dto/IMusicGenre\";\r\nimport { BaseService } from \"../../services/base-service\";\r\n\r\nconst MusicGenresDisplay = (props: { addMusicGenre: Function }) => {\r\n    const [musicGenres, setMusicGenres] = useState([] as IMusicGenre[]);\r\n\r\n    const loadData = async () => {\r\n        const response = await BaseService.getAll<IMusicGenre>('/musicgenres');\r\n        if (response.ok && response.data) {\r\n            setMusicGenres(response.data);\r\n        } else {\r\n            \r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, []);\r\n\r\n    return (\r\n        <section>\r\n            <div className=\"card-body\">\r\n                <p>Choose music genres you are working in</p>\r\n                <ul className=\"list-group\">\r\n                    {musicGenres.map(genre =>\r\n                        <li className=\"list-group-item rounded-0\" key={genre.id}>\r\n                            <div className=\"custom-control custom-checkbox\">\r\n                                <label className=\"cursor-pointer font-italic d-block custom-control-label\" htmlFor={genre.id}>\r\n                                    <input onChange={(e) => props.addMusicGenre(genre)} className=\"custom-control-input\" type=\"checkbox\" value={genre.genre} key={genre.id} />{genre.genre}\r\n                                </label>\r\n                            </div>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default MusicGenresDisplay;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alert, { EAlertClass } from \"../../components/Alert\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { IArtistAdd } from \"../../dto/IArtist\";\r\nimport { IMusicGenre } from \"../../dto/IMusicGenre\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport MusicGenresDisplay from \"../musicgenres/MusicGenresView\";\r\n\r\nconst ArtistCreate = () => {\r\n    const appState = useContext(AppContext);\r\n    const history = useHistory();\r\n\r\n    const [artistData, setArtistData] = useState({ name: '', bio: '', appUserId: '', musicGenres: [] as IMusicGenre[] } as IArtistAdd);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    const submitClicked = async () => {\r\n        if (artistData.name === '') {\r\n            setAlertMessage('Name can\\'t be empty!');\r\n            return\r\n        }\r\n        artistData.appUserId = appState.getUserId(appState.token!);\r\n        const response = await BaseService.post('/artists', artistData, appState.token!);\r\n        if (response.ok) {\r\n            const data = response.data!;\r\n            appState.promoteToTempArtist(appState, data.id!);\r\n            history.push('/artists')\r\n        } else {\r\n            setAlertMessage(response.messages![0]);\r\n        }\r\n    }\r\n\r\n    const handleAddedMusicGenre = (musicgenre: IMusicGenre) => {\r\n        if (!artistData.musicGenres.find(m => m.id === musicgenre.id)) {\r\n            artistData.musicGenres.push(musicgenre);\r\n            setArtistData({ ...artistData, musicGenres: [...artistData.musicGenres] })\r\n        } else {\r\n            const changedMusicgenres = artistData.musicGenres.filter(g => g.id !== musicgenre.id)\r\n            setArtistData({ ...artistData, musicGenres: changedMusicgenres })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-box\">\r\n            <section>\r\n                <h2>Want to become an artist?</h2>\r\n                <br />\r\n                <h6>Tell us something about you.</h6>\r\n                <ul>\r\n                    <li><label htmlFor=\"artistName\"> Name </label></li>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"artistName\"\r\n                        name=\"artistName\"\r\n                        value={artistData.name} \r\n                        onChange={(e) => setArtistData({ ...artistData, name: e.target.value })}\r\n                        placeholder=\"your alias\"\r\n                        minLength={2}\r\n                        required\r\n                    />\r\n                </ul>\r\n                <ul>\r\n                    <li>\r\n                        <label htmlFor=\"bio\"> Bio </label>\r\n                    </li>\r\n                    <textarea\r\n                        id=\"bio\"\r\n                        name=\"bio\"\r\n                        value={artistData.bio} \r\n                        onChange={(e) => setArtistData({ ...artistData, bio: e.target.value })}\r\n                    />\r\n                </ul>\r\n                <MusicGenresDisplay addMusicGenre={handleAddedMusicGenre} />\r\n                <div className=\"form-group\">\r\n                    <button\r\n                        onClick={submitClicked}\r\n                        type=\"submit\"\r\n                        className=\"btn btn-secondary\"\r\n                    >\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n                <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ArtistCreate;\r\n","import { useState, useContext, useEffect } from \"react\";\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport { IUserLikeAdd, IUserLikeRemove, IUserLikeResponse } from \"../dto/IUserLike\";\r\nimport { BaseService } from \"../services/base-service\";\r\nimport \"./LikeButton.css\";\r\n\r\ninterface ILikeBottonProps {\r\n    handleLike: Function;\r\n    productIndex: number;\r\n    productId: string;\r\n}\r\n\r\ninterface ILikeState {\r\n    id?: string | null;\r\n    liked: boolean;\r\n}\r\n\r\nconst initialHeartStyle = \"fa fa-heart\";\r\n\r\nconst LikeButton = (props: ILikeBottonProps) => {\r\n    const appState = useContext(AppContext);\r\n    const [likeState, setLikeState] = useState({ liked: false } as ILikeState);\r\n    const [heartStyle, setHeartStyle] = useState(initialHeartStyle);\r\n\r\n    const handleLike = async () => {\r\n        if (!likeState.liked) {\r\n            const dataForm = { productId: props.productId } as IUserLikeAdd;\r\n            const response = await BaseService.post('/userlikes', dataForm, appState.token!);\r\n            if (response.ok && response.data) {\r\n                const data = response.data as IUserLikeResponse;\r\n                props.handleLike(props.productIndex, data.likesAfterUpdate);\r\n                setLikeState({ id: data.id, liked: true });\r\n                setHeartStyle(initialHeartStyle + \" liked\");\r\n                appState.updateUserLikedProductsList(appState);\r\n            }\r\n        } else {\r\n            const response = await BaseService.delete('/userlikes/', appState.token!, [props.productId]);\r\n            if (response.ok && response.data) {\r\n                const data = response.data as IUserLikeRemove;\r\n                props.handleLike(props.productIndex, data.likesAfterRemove);\r\n                setLikeState({ id: null, liked: false });\r\n                setHeartStyle(initialHeartStyle);\r\n                appState.updateUserLikedProductsList(appState);\r\n            }\r\n        }   \r\n    }\r\n\r\n    useEffect(() => {\r\n        const loadData = async (): Promise<void> => {\r\n            const likedProducts = appState.likedProducts;\r\n            const item = likedProducts.find(entity => entity.productId === props.productId);\r\n            if (item) {\r\n                setLikeState({ id: item?.id, liked: true });\r\n                const newClassName = initialHeartStyle + ' liked';\r\n                setHeartStyle(newClassName);\r\n            }\r\n        }\r\n        loadData();\r\n        return () => {\r\n            console.log(\"unmounted\");\r\n            setLikeState({ liked: false });\r\n            setHeartStyle(initialHeartStyle);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <button onClick={handleLike}>\r\n            <i className={heartStyle}></i>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default LikeButton;","import { useContext } from \"react\";\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport { IProductInCartAdd } from \"../dto/IProductInCart\";\r\nimport { BaseService } from \"../services/base-service\";\r\nimport \"./AddToCartButton.css\"\r\n\r\ninterface IButtonAddToCart {\r\n    productId: string;\r\n}\r\n\r\nconst ButtonAddToCart = (props: IButtonAddToCart) => {\r\n    const appState = useContext(AppContext);\r\n\r\n    const handleClick = async () => {\r\n        //TODO: implement\r\n        console.log('clicked');\r\n        const formData = { productId: props.productId } as IProductInCartAdd;\r\n        const response = await BaseService.post('/productincarts', formData, appState.token!);\r\n        if (response.ok && response.data) {\r\n            appState.updateUserCart(appState);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"add-to-cart-button\">\r\n            <button className=\"add-to-cart\" onClick={handleClick}>Add to cart</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ButtonAddToCart;","import React, { useContext, useEffect, useState } from 'react';\r\nimport { ServerUrl } from '../configuration';\r\nimport { AppContext } from '../context/AppContext';\r\nimport { IComment, ICommentAdd } from '../dto/IComment';\r\nimport { IProduct } from '../dto/IProduct';\r\nimport { BaseService } from '../services/base-service';\r\nimport './CommentSection.css';\r\n\r\ninterface ICommentSectionProps {\r\n    product: IProduct;\r\n}\r\n\r\ninterface ICommentRowProps {\r\n    comment: IComment;\r\n}\r\n\r\nexport const CommentRow = (props: ICommentRowProps) => {\r\n    return (\r\n        <div className=\"d-flex justify-content-center py-2\">\r\n                <div className=\"second py-2 px-2\"> <span className=\"text1\">{props.comment.text}</span>\r\n                    <div className=\"d-flex justify-content-between py-1 pt-2\">\r\n                        <div>\r\n                            <img src={ServerUrl + \"/images/\" + props.comment.appUserImage} alt=\"\" width=\"18\"/>\r\n                            <span className=\"text2\">{props.comment.appUserName}</span>\r\n                        </div>\r\n                        <div>\r\n                            <span className=\"text4\">{props.comment.published}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n\r\nconst style = \"comment-section-container justify-content-center border-left border-right\"\r\n\r\nconst CommentSection = (props: ICommentSectionProps) => {\r\n    const appState = useContext(AppContext);\r\n    const [productComments, setProductComments] = useState([] as IComment[]);\r\n    const [userComment, setUserComment] = useState({ text: '', productId: '' } as ICommentAdd)\r\n    const [compStyle, setCompStyle] = useState(style);\r\n\r\n    const handleCommentUpload = async (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            const response = await BaseService.post<ICommentAdd>('/comments', userComment, appState.token!);\r\n            if (response.ok && response.data) {\r\n                setUserComment({ text: '', productId: '' });\r\n                loadComments();\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (userComment.productId === '') {\r\n            userComment.productId = props.product.id;\r\n        }\r\n    }, [appState, props.product.id, userComment, userComment.productId])\r\n\r\n    const handleCommentChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setUserComment({ ...userComment, text: e.target.value })\r\n    }\r\n\r\n    const loadComments = async () => {\r\n        console.log(props.product.id);\r\n        const response = await BaseService.getAll<IComment>('/comments/' + props.product.id);\r\n        console.log(response);\r\n        if (response.ok && response.data) {\r\n            var data = response.data;\r\n            setProductComments(data);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCompStyle(compStyle + \" show\")\r\n        console.log(\"loaded\")\r\n        loadComments();\r\n        return () => {\r\n            console.log(\"unmounted\")\r\n            setProductComments([]);\r\n            setUserComment({ text: '', productId: '' });\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <div className={compStyle}>\r\n            <div className=\"d-flex justify-content-center pt-3 pb-2\">\r\n                <i>Product <em>{props.product.title}</em></i>\r\n            </div>\r\n            {productComments.length > 0 ? productComments.map(comment => <CommentRow key={comment.id} comment={comment}/>) : <div>No comments...</div>}\r\n            {appState.token ?\r\n            <div className=\"d-flex justify-content-center pt-3 pb-2\">\r\n                <input value={userComment.text} type=\"text\" name=\"text\" placeholder=\"+ Write a comment\" className=\"form-control addtxt\" onChange={handleCommentChange} onKeyPress={handleCommentUpload}/> \r\n            </div> : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CommentSection;","import { ServerUrl } from \"../configuration\";\r\nimport \"./AudioPlayer.css\"\r\n\r\nexport interface IAudioPlayer {\r\n    serverLocation: string;\r\n    src: string;\r\n    player: HTMLAudioElement | null;\r\n    play: Function;\r\n    pause: Function;\r\n    stop: Function;\r\n    setSrc(src: string): void;\r\n    isPlaying: boolean;\r\n}\r\n\r\nexport const initialPlayer: IAudioPlayer = {\r\n    serverLocation: '',\r\n    src: '',\r\n    player: null,\r\n    play: () => {},\r\n    pause: () => {},\r\n    stop: () => {},\r\n    setSrc: () => {},\r\n    isPlaying: false\r\n}\r\n\r\nconst audioPlayer: IAudioPlayer = {\r\n    serverLocation: ServerUrl,\r\n    src: \"\",\r\n    player: new Audio(),\r\n    play() {\r\n        this.player!.play();\r\n        this.isPlaying = true;\r\n    },\r\n    pause() {\r\n        this.player!.pause();\r\n        this.isPlaying = false;\r\n    },\r\n    stop() {\r\n        this.player!.pause();\r\n        this.player!.currentTime = 0;\r\n    },\r\n    setSrc(src: string) {\r\n        this.src = src;\r\n        const connctionString = this.serverLocation + this.src;\r\n        this.player!.src = connctionString;\r\n    },\r\n    isPlaying: false,\r\n}\r\n\r\nexport default audioPlayer;","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { IArtistDetails, IArtistSimple } from \"../../dto/IArtist\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { IRouteArtistAlias } from \"../../types/IRouteId\";\r\nimport Loader from \"../../components/Loader\";\r\nimport './ArtistDetailsView.css';\r\nimport { IProduct, IProductDetailed } from \"../../dto/IProduct\";\r\nimport { ITrack } from \"../../dto/ITrack\";\r\nimport { EPlayerState } from \"./EPlayerState\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport LikeButton from \"../../components/LikeButton\";\r\nimport { IPlayCountAdd, IPlayCountAddResponse } from \"../../dto/IPlayCount\"\r\nimport ButtonAddToCart from \"../../components/AddToCartButton\";\r\nimport CommentSection from \"../../components/CommentSection\";\r\nimport audioPlayer, { IAudioPlayer, initialPlayer } from \"../../components/AudioPlayer\";\r\nimport { ServerUrl } from \"../../configuration\";\r\n\r\ninterface IProductRowProps {\r\n    productIndex?: number;\r\n    product: IProduct | IProductDetailed;\r\n    artist: IArtistDetails | IArtistSimple;\r\n    player: IAudioPlayer;\r\n    setPlayerState: Function;\r\n    playerState: EPlayerState;\r\n    handleLike: Function;\r\n    handlePlay: Function;\r\n    handleViewComments?: Function;\r\n}\r\n\r\ninterface ITrackRowProps {\r\n    trackIndex: number;\r\n    productIndex: number;\r\n    track: ITrack;\r\n    player: IAudioPlayer;\r\n    setPlayerState: Function;\r\n    playerState: EPlayerState;\r\n    handlePlay: Function;\r\n}\r\n\r\nexport const TrackRowDisplay = (props: ITrackRowProps) => {\r\n    const appState = useContext(AppContext);\r\n    const [played, setPlayed] = useState(false);\r\n\r\n    const handlePlayAction = async () => {\r\n        const data = { trackId: props.track.id } as IPlayCountAdd;\r\n        const response = await BaseService.post('/playcounts', data, appState.token!);\r\n        if (response.ok && response.data) {\r\n            setPlayed(true);\r\n            const entity = response.data as IPlayCountAddResponse;\r\n            props.handlePlay(props.productIndex, props.trackIndex, entity.playCountAfterUpdate)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <tr className=\"product-track\">\r\n            <td className=\"track-play-button\">\r\n                <button onClick={() => {\r\n                    if (props.playerState === EPlayerState.Playing) {\r\n                        props.setPlayerState(EPlayerState.OnPause);\r\n                        props.player.pause();\r\n                    } else {\r\n                        if (props.player.src !== props.track.fileLocation) props.player.setSrc(props.track.fileLocation);\r\n                        props.setPlayerState(EPlayerState.Playing)\r\n                        if (played === false) {\r\n                            handlePlayAction();\r\n                        }\r\n                        props.player.play();\r\n                    }\r\n                }}>\r\n                    {props.player.src === props.track.fileLocation && props.playerState === EPlayerState.Playing ? <span>&#10074;&#10074;</span> : <span>&#9658;</span>}\r\n                </button>\r\n                <button onClick={() => {\r\n                    props.setPlayerState(EPlayerState.OnPause);\r\n                    props.player.stop()\r\n                }}>\r\n                    <span>&#9209;</span>\r\n                </button>\r\n            </td>\r\n            <td className=\"track-title\">\r\n                <span>{props.track.title}</span>\r\n            </td>\r\n            <td className=\"track-playcount\">\r\n                <span>{props.track.playCount}</span>\r\n            </td>\r\n            <td className=\"track-duration\">\r\n                <span>{props.track.duration.toString().substring(3)}</span>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport const ProductRowDisplay = (props: IProductRowProps) => {\r\n    const appState = useContext(AppContext);\r\n\r\n    const compareFn = (a: number, b: number) => {\r\n        if (a > b) return 1;\r\n        if (a < b) return -1;\r\n        return 0\r\n    }\r\n\r\n    const viewLike = () => {\r\n        if (appState.token && appState.artistId === props.artist.id) return;\r\n        else if (appState.token) return <LikeButton handleLike={props.handleLike} productIndex={props.productIndex!} productId={props.product.id} />;\r\n        return <Link to=\"/account/login\"><button><i className=\"fa fa-heart\"></i></button></Link>;\r\n    }\r\n\r\n    const viewBuy = () => {\r\n        if (appState.token && appState.artistId === props.artist.id) return;\r\n        else if (appState.token) return <ButtonAddToCart productId={props.product.id} />\r\n        return <div className=\"add-to-cart-button\"><Link to=\"/account/login\"><button className='add-to-cart'>Donate</button></Link></div>;\r\n    }\r\n\r\n    return (\r\n        <li className=\"product-view\">\r\n            <div className=\"product-view-container\">\r\n                <div className=\"product-img\">\r\n                    <img className=\"vertical-center\" src={ServerUrl + '/images/' + props.product.imagePath} alt=\"\" />\r\n                </div>\r\n                <div className=\"product-content\">\r\n                    <div className=\"product-title\">\r\n                        <Link to={\"/artists/\" + props.artist.name + \"/products/\" + props.product.title}><span>Title: <i>{props.product.title}</i></span></Link>\r\n                        <span style={{ float: \"right\" }}>Duration: {props.product.duration}</span>\r\n                    </div>\r\n                    <table className=\"product-tracks\">\r\n                        <tbody>\r\n                            {props.product.tracks.sort((t1, t2) => compareFn(t1.trackNumber, t2.trackNumber)).map((track, index) =>\r\n                                <TrackRowDisplay\r\n                                    productIndex={props.productIndex!}\r\n                                    trackIndex={index}\r\n                                    handlePlay={props.handlePlay}\r\n                                    key={track.trackNumber}\r\n                                    player={props.player}\r\n                                    playerState={props.playerState}\r\n                                    setPlayerState={props.setPlayerState}\r\n                                    track={track} />\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"product-marketing-info\">\r\n                <div className=\"product-price-wrapper\">\r\n                    <i className=\"product-price\">Price: {props.product.price}</i>\r\n                    {viewBuy()}\r\n                </div>\r\n                {props.handleViewComments !== undefined ?\r\n                    <div className=\"product-comments\">\r\n                        <button onClick={() => props.handleViewComments!(props.product)}>\r\n                            <i className=\"icon-comments\">Comments</i>\r\n                        </button>\r\n                    </div> : null}\r\n                <div className=\"product-likes\">\r\n                    <i className=\"icon-likes\">Likes: {props.product.likes}</i>\r\n                    {viewLike()}\r\n                </div>\r\n            </div>\r\n            {props.product.genre ?\r\n                <p style={{ marginLeft: \"10px\" }}>Music genre: {props.product.genre}</p>\r\n                : null}\r\n            {props.product.format ?\r\n                <p style={{ marginLeft: \"10px\" }}>Product fromat: {props.product.format}</p>\r\n                : null}\r\n            {props.product.type ?\r\n                <p style={{ marginLeft: \"10px\" }}>Product type: {props.product.type}</p>\r\n                : null}\r\n            {props.product.description ?\r\n                <p style={{ marginLeft: \"10px\" }}>Description: {props.product.description}</p>\r\n                : null}\r\n        </li>)\r\n};\r\n\r\n\r\n//https://icons-for-free.com/iconfiles/png/512/communication+message+messages+icon-1320191167511595434.png\r\n\r\nconst ARTIST_VIEW_STYLE = \"artist-profile\"\r\n\r\nconst ArtistDetails = () => {\r\n    const { alias } = useParams() as IRouteArtistAlias;\r\n    const [artist, setArtist] = useState({} as IArtistDetails);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n    const [player, setPlayer] = useState(audioPlayer);\r\n    const [playerState, setPlayerState] = useState(EPlayerState.OnPause);\r\n\r\n    const [pageLayoutStatus, setPageLayoutStatus] = useState(ARTIST_VIEW_STYLE);\r\n\r\n    const [commentSectionState, setCommentSectionState] = useState({ product: {} as IProduct, toggled: false });\r\n\r\n    useEffect(() => {\r\n        async function loadData(): Promise<void> {\r\n            const response = await BaseService.get<IArtistDetails>('/artists/' + alias);\r\n            if (response.ok && response.data) {\r\n                setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n                setArtist(response.data!);\r\n            } else {\r\n                setPageStatus({ pageStatus: EPageStatus.Error, statusCode: response.statusCode });\r\n            }\r\n        }\r\n        loadData();\r\n        return () => {\r\n            player.pause()\r\n            setPlayer(initialPlayer);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [alias]);\r\n\r\n    const handleLike = (productIndex: number, likes: number) => {\r\n        artist.products[productIndex].likes = likes;\r\n        setArtist({ ...artist })\r\n    }\r\n\r\n    const handlePlay = (productIndex: number, trackIndex: number, plays: number) => {\r\n        artist.products[productIndex].tracks[trackIndex].playCount = plays;\r\n        setArtist({ ...artist })\r\n    }\r\n\r\n    const handleViewComments = (product: IProduct) => {\r\n        if (commentSectionState.toggled) {\r\n            setPageLayoutStatus(ARTIST_VIEW_STYLE)\r\n            setCommentSectionState({ product: product, toggled: false });\r\n        } else {\r\n            setPageLayoutStatus(pageLayoutStatus + \" opened\")\r\n            setCommentSectionState({ product: product, toggled: true });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {pageStatus.pageStatus === EPageStatus.OK ?\r\n                <div className=\"artist-profile-container\">\r\n                    <div className={pageLayoutStatus}>\r\n                        <div className=\"artist-profile-main-info\">\r\n                            <div className=\"artist-info\">\r\n                                <div className=\"artist-profile-pic\"><img className=\"img-big\" src={ServerUrl + '/images/' + artist.imagePath} alt=\"\" /></div>\r\n                                <div className=\"artist-info-name\">Name: {artist.name}</div>\r\n                                <div className=\"artist-info-bio\">Bio: {artist.bio}</div>\r\n                                <div className=\"artist-info-followers\">Followers: {artist.followers}</div>\r\n                            </div>\r\n                            <div className=\"artist-profile-tracks\">\r\n                                <p className=\"tracks-label\">Products: </p>\r\n                                <ul id=\"artist-products\">\r\n                                    {artist.products && artist.products.length > 0 ? artist.products.map((product, index) =>\r\n                                        <ProductRowDisplay\r\n                                            artist={artist}\r\n                                            handlePlay={handlePlay}\r\n                                            handleLike={handleLike}\r\n                                            handleViewComments={handleViewComments}\r\n                                            productIndex={index}\r\n                                            player={player}\r\n                                            playerState={playerState}\r\n                                            setPlayerState={setPlayerState}\r\n                                            product={product}\r\n                                            key={product.id} />\r\n                                    ) : <p>There are currently no any products</p>}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        {commentSectionState.toggled ? <CommentSection product={commentSectionState.product} /> : null}\r\n                    </div>\r\n                </div>\r\n                : <Loader {...pageStatus} />}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ArtistDetails;\r\n","import { useParams } from \"react-router-dom\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\n\r\nconst ArtistEdit = () => {\r\n    const {id} = useParams() as IRouteId;\r\n\r\n    return (\r\n        <div>ArtistEdit {id}</div>\r\n    );\r\n}\r\n\r\nexport default ArtistEdit;\r\n","import { useParams } from \"react-router-dom\";\r\nimport { IRouteId } from \"../../types/IRouteId\";\r\n\r\nconst ArtistDelete = () => {\r\n    const {id} = useParams() as IRouteId;\r\n\r\n    return (\r\n        <div>ArtistDelete {id}</div>\r\n    );\r\n}\r\n\r\nexport default ArtistDelete;\r\n","import { useContext } from \"react\";\r\nimport { AppContext } from \"../context/AppContext\";\r\nimport { BaseService } from \"../services/base-service\";\r\n\r\ninterface IMakeOrderButtonProps {\r\n    updateCartData: Function;\r\n}\r\n\r\nconst MakeOrderButton = (props: IMakeOrderButtonProps) => {\r\n    const appState = useContext(AppContext);\r\n\r\n    const handleOrderClick = async () => {\r\n        const response = await BaseService.post('/orders', '', appState.token!);\r\n        console.log(response);\r\n        if (response.ok) {\r\n            console.log(\"Order is made successfully\");\r\n            appState.updateUserCart(appState);\r\n            props.updateCartData();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <button onClick={handleOrderClick}>Order!</button>\r\n    );\r\n}\r\n\r\nexport default MakeOrderButton;","import { IProduct } from \"./IProduct\";\r\n\r\nexport interface ICartDetails {\r\n    total: number;\r\n    quantity: number;\r\n    cartProducts: IProduct[];\r\n    productsInOrders: IProduct[];\r\n}\r\n\r\nexport const initialCartDetails: ICartDetails = {\r\n    total: 0,\r\n    quantity: 0,\r\n    cartProducts: [],\r\n    productsInOrders: []\r\n}\r\n\r\nexport interface ICartSimple {\r\n    total: number;\r\n    quantity: number;\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Alert, { EAlertClass } from \"../../components/Alert\";\r\nimport MakeOrderButton from \"../../components/MakeOrderButton\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { ICartDetails, initialCartDetails } from \"../../dto/ICart\";\r\nimport { BaseService } from \"../../services/base-service\";\r\n\r\nconst CartDetails = () => {\r\n    const appState = useContext(AppContext);\r\n    const [cartData, setCartData] = useState(initialCartDetails);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        async function loadData() {\r\n            const userId =  appState.getUserId(appState.token!);\r\n            const response = await BaseService.get<ICartDetails>('/carts/status/detailed/', appState.token!, [userId]);\r\n            if (response.ok && response.data) {\r\n                setCartData({ total: response.data.total, quantity: response.data.quantity, cartProducts: response.data.cartProducts, productsInOrders: response.data.productsInOrders });\r\n            }\r\n        }\r\n        loadData()\r\n    },[appState]);\r\n\r\n    const handleCartUpdate = () => {\r\n        setCartData({...cartData, productsInOrders: []})\r\n        setAlertMessage(\"You succesfully order the products!\");\r\n        setTimeout(() => setAlertMessage(''), 3000);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>Your cart</div>\r\n            <div>Total: {cartData.total}</div>\r\n            <div>Quantity: {cartData.quantity}</div>\r\n            <div>\r\n                {cartData.cartProducts.map(p => \r\n                    <div key={p.id}>Product with title: {p.title} and price: {p.price}</div>    \r\n                )}\r\n            </div>\r\n            {cartData.cartProducts.length > 0 ? <MakeOrderButton updateCartData={handleCartUpdate}/> : null}\r\n            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Success} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CartDetails;","import { ILoginResponse } from '../types/ILoginResponse';\r\nimport { IRegisterResponse } from './../types/IRegisterResponse';\r\nimport Axios, { AxiosError } from 'axios';\r\nimport { ApiBaseUrl } from '../configuration';\r\nimport { IFetchResponse } from '../types/IFetchResponse';\r\nimport { IMessages } from '../types/IMessages';\r\nimport { IRegisterForm } from '../types/IRegisterForm';\r\n\r\n\r\nexport abstract class AccountService {\r\n    protected static axios = Axios.create({\r\n        baseURL: ApiBaseUrl\r\n    });\r\n\r\n    static async Login(apiEndpoint: string, loginData: { email: string, password: string }): Promise<IFetchResponse<ILoginResponse>> {\r\n        const loginDataJson = JSON.stringify(loginData);\r\n        try {\r\n            const response = await this.axios.post<ILoginResponse>(apiEndpoint, loginDataJson, {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data\r\n            };\r\n        }\r\n        catch (err) {\r\n            const error = err as AxiosError;\r\n            const messages = error.response?.data as IMessages;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: messages !== undefined ? messages.messages : [\"Server is currently off\"],\r\n            }\r\n        }\r\n    }\r\n\r\n    static async Register(apiEndpoint: string, registerData: IRegisterForm): Promise<IFetchResponse<IRegisterResponse>> {\r\n        let formData = new FormData();\r\n        formData.append('Email', registerData.email);\r\n        formData.append('Password', registerData.password);\r\n        formData.append('FirstName', registerData.firstName);\r\n        formData.append('LastName', registerData.lastName);\r\n        formData.append('Birthday', registerData.birthday);\r\n        formData.append('CountryName', registerData.countryName);\r\n        formData.append('ImageFile', registerData.imageFile!);\r\n\r\n        try {\r\n            const response = await this.axios.post<IRegisterResponse>(apiEndpoint, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            console.log(response);\r\n\r\n            return {\r\n                ok: response.status <= 299,\r\n                statusCode: response.status,\r\n                data: response.data\r\n            };\r\n        }\r\n        catch (err) {\r\n            const error = err as AxiosError;\r\n            return {\r\n                ok: false,\r\n                statusCode: error.response?.status ?? 500,\r\n                messages: (error.response?.data as IMessages).messages,\r\n            }\r\n        }\r\n    }\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport Alert, { EAlertClass } from \"../../components/Alert\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { AccountService } from \"../../services/account-service\";\r\nimport { ILoginResponse } from \"../../types/ILoginResponse\";\r\n\r\nconst Login = () => {\r\n    const appState = useContext(AppContext);\r\n    const history = useHistory();\r\n\r\n    const [loginData, setLoginData] = useState({ email: '', password: '' });\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    const loginClicked = async () => {\r\n        if (loginData.email === '' || loginData.password === '') {\r\n            setAlertMessage('Empty email or password');\r\n        }\r\n        setAlertMessage('');\r\n        const response = await AccountService.Login('/account/login', loginData);\r\n        if (!response.ok) {\r\n            setAlertMessage(response.messages![0]);\r\n        } else {\r\n            setAlertMessage('');\r\n            const data = response.data as ILoginResponse;\r\n            appState.setAuthInfo(data);\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-box\">\r\n            <section>\r\n                <h2>Sign In</h2>\r\n                <p>Already have an account? Sign In.</p>\r\n                <ul>\r\n                    <li>\r\n                        <label htmlFor=\"username\"> Email Address </label>\r\n                    </li>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"username\"\r\n                        name=\"username\"\r\n                        v-model=\"email\"\r\n                        placeholder=\"name@example.com\"\r\n                        required\r\n                        value={loginData.email} onChange={e => setLoginData({ ...loginData, email: e.target.value })}\r\n                    />\r\n                </ul>\r\n                <ul>\r\n                    <li>\r\n                        <label htmlFor=\"password\"> Password </label>\r\n                    </li>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        v-model=\"password\"\r\n                        placeholder=\"************\"\r\n                        required\r\n                        value={loginData.password} onChange={e => setLoginData({ ...loginData, password: e.target.value })}\r\n                    />\r\n                </ul>\r\n                <br />\r\n                <div className=\"form-group\">\r\n                    <button\r\n                        onClick={loginClicked}\r\n                        type=\"submit\"\r\n                        className=\"btn btn-primary\"\r\n                    >\r\n                        Log in\r\n                    </button>\r\n                    <NavLink type=\"submit\" className=\"btn btn-secondary\" to=\"/account/register\">\r\n                        Register\r\n                    </NavLink>\r\n                </div>\r\n            </section>\r\n            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","export enum EProductUploadState {\r\n    NotUploaded,\r\n    Uploaded,\r\n    OnNetwork,\r\n}\r\n","export interface IRegisterForm {\r\n    email: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    birthday: string;\r\n    countryName: string;\r\n    imageFile: File | null;\r\n}\r\n\r\nexport const intialRegisterForm: IRegisterForm = {\r\n    email: '',\r\n    password: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    birthday: '',\r\n    countryName: '',\r\n    imageFile: null\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { AccountService } from \"../../services/account-service\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { ICountry } from \"../../dto/ICountry\";\r\nimport { intialRegisterForm } from \"../../types/IRegisterForm\";\r\nimport Alert, { EAlertClass } from \"../../components/Alert\";\r\nimport { IRegisterResponse } from \"../../types/IRegisterResponse\";\r\n\r\nconst Register = () => {\r\n    const appState = useContext(AppContext);\r\n    const history = useHistory();\r\n\r\n    const [countries, setCountries] = useState([] as ICountry[]);\r\n    /* State for password check */\r\n    const [confirmPassword, setConfirmPassword] = useState({ value: '' });\r\n\r\n    const saveFile = (e: any) => {\r\n        e.preventDefault();\r\n        setRegisterData({\r\n            ...registerData, imageFile: e.target.files[0]!\r\n        })\r\n    }\r\n\r\n    const [registerData, setRegisterData] = useState(intialRegisterForm)\r\n\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    const registerClicked = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        e.preventDefault();\r\n        console.log(registerData);\r\n        \r\n        if (registerData.email === '' || registerData.password === '') {\r\n            setAlertMessage('Empty email or password!');\r\n            return;\r\n        };\r\n        if (registerData.password !== confirmPassword.value) {\r\n            setAlertMessage('Passwords don\\'t match!');\r\n            return;\r\n        };\r\n        setAlertMessage('');\r\n\r\n        const response = await AccountService.Register('/account/register', registerData);\r\n\r\n        if (!response.ok) {\r\n            setAlertMessage(response.messages !== undefined ? response.messages![0] : \"Fill submition form\");\r\n        } else {\r\n            setAlertMessage('');\r\n            const data = response.data as IRegisterResponse;\r\n            appState.setAuthInfo(data);\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    /* Get all countries */\r\n\r\n    const loadData = async () => {\r\n        const result = await BaseService.getAll<ICountry>('/countries');\r\n\r\n        if (result.ok && result.data) {\r\n            setCountries(result.data);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"form-box\">\r\n\r\n            <h2>Register</h2>\r\n            <p className=\"login-help\">\r\n                Don&#39;t have an account yet? Just submit a register htmlForm.\r\n                        </p>\r\n            <fieldset>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\"> Email Address </label><br />\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        value={registerData.email}\r\n                        onChange={e => setRegisterData({ ...registerData, email: e.target.value })}\r\n                        placeholder=\"name@example.com\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={registerData.password}\r\n                        onChange={e => setRegisterData({ ...registerData, password: e.target.value })}\r\n                        placeholder=\"**********\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Confirm password</label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={confirmPassword.value}\r\n                        onChange={e => setConfirmPassword({ value: e.target.value })}\r\n                        placeholder=\"**********\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"firstName\">First name</label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"firstName\"\r\n                        value={registerData.firstName}\r\n                        onChange={e => setRegisterData({ ...registerData, firstName: e.target.value })}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"lastName\">Last name</label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        id=\"lastName\"\r\n                        name=\"lastName\"\r\n                        value={registerData.lastName}\r\n                        onChange={e => setRegisterData({ ...registerData, lastName: e.target.value })}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"birthday\">Birthday</label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type=\"date\"\r\n                        id=\"birthday\"\r\n                        name=\"birthday\"\r\n                        value={registerData.birthday}\r\n                        onChange={e => setRegisterData({ ...registerData, birthday: e.target.value })}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"control-label\" htmlFor=\"countryName\">Choose a country</label>\r\n                    <select\r\n                        className=\"form-control\"\r\n                        id=\"Input_CountryId\"\r\n                        name=\"Input.CountryId\"\r\n                        value={registerData.countryName}\r\n                        onChange={e => setRegisterData({ ...registerData, countryName: e.target.value })}\r\n                    >\r\n                        <option value=\"\">--- Please select ---</option>\r\n                        {countries.map(country => (\r\n                            <option value={country.name} key={country.id}>{country.name}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"image\">Select image</label><br />\r\n                    <input\r\n                        type=\"file\"\r\n                        id=\"image\"\r\n                        name=\"image\"\r\n                        accept=\"image/*\"\r\n                        onChange={saveFile}\r\n                    />\r\n                </div>\r\n            </fieldset>\r\n            <button\r\n                onClick={e => registerClicked(e)}\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\"\r\n            >\r\n                Register\r\n            </button>\r\n            <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Danger} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n","const Page404 = () => {\r\n    return (\r\n        <div>Page not found - 404!</div>\r\n    );\r\n}\r\n\r\nexport default Page404;\r\n","import { useState } from \"react\";\r\n\r\ninterface IFormValues {\r\n    input: string;\r\n    checkbox: boolean;\r\n    radio: boolean;\r\n    textarea: string;\r\n    select: string;\r\n}\r\n\r\nexport interface IFormProps {\r\n    values: IFormValues;\r\n    handleChange: (\r\n        target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement\r\n    ) => void;\r\n}\r\n\r\nconst FormView = (props: IFormProps) => {\r\n    return (\r\n        <form action=\"\">\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"formInputEmail\">\r\n                </label>\r\n                <input value={props.values.input} onChange={(e) => props.handleChange(e.target)} className=\"form-control\" type=\"text\" id=\"formInputText\" />\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport const initialFormValues: IFormValues = {\r\n    input: '',\r\n    checkbox: false,\r\n    radio: false,\r\n    textarea: '',\r\n    select: '',\r\n};\r\n\r\n\r\n\r\nconst PageForm = () => {\r\n    const [formValues, setFormValues] = useState(initialFormValues);\r\n    const handleChange = (target: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement) => {\r\n        let values = formValues;\r\n        if (target.id === \"formInputText\") {\r\n            setFormValues({...values, input: target.value});\r\n            return;\r\n        };\r\n    };\r\n    return <FormView values={formValues} handleChange={handleChange} />\r\n};\r\n\r\nexport default PageForm;\r\n","import React, { useContext, useState } from \"react\";\r\nimport Alert, { EAlertClass } from \"../../components/Alert\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { BaseService } from \"../../services/base-service\";\r\n\r\ninterface IArtistEdit {\r\n    name: string;\r\n    bio: string;\r\n}\r\n\r\nconst initialArtisteditForm: IArtistEdit = {\r\n    name: '',\r\n    bio: ''\r\n}\r\n\r\nconst Profile = () => {\r\n    const appState = useContext(AppContext);\r\n    const [formData, setFormData] = useState(initialArtisteditForm);\r\n    const [alertMessage, setAlertMessage] = useState('');\r\n\r\n    const handleUpdateClick = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        e.preventDefault();\r\n        const response = await BaseService.put('/artists', formData, appState.token!);\r\n        if (response.ok && response.data) {\r\n            setAlertMessage('Updated!')\r\n            setTimeout(() => setAlertMessage(''), 3000);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>{appState.firstName} {appState.lastName} its your profile!</div>\r\n            <div className=\"form-box\">\r\n                <form>\r\n                    {appState.isArtist ?\r\n                        <div>\r\n                            <label htmlFor=\"manage-info\">Manage your account preferences</label>\r\n                            <p>Change your artist info</p>\r\n                            <fieldset>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\">Name</label><br />\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={formData.name}\r\n                                        onChange={e => setFormData({ ...formData, name: e.target.value })}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"bio\">Bio</label><br />\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={formData.bio}\r\n                                        onChange={e => setFormData({ ...formData, bio: e.target.value })}\r\n                                    />\r\n                                </div>\r\n                            </fieldset>\r\n                            <button onClick={e => handleUpdateClick(e)}>Update!</button>\r\n                        </div> : null}\r\n                        <Alert show={alertMessage !== ''} message={alertMessage} alertClass={EAlertClass.Success} />\r\n                </form>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { IFavoriteListItemDetailed } from \"../../dto/IFavoriteList\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { ArtistRowDisplay } from \"../artist/ArtistDiscoverView\";\r\n\r\nconst FavoriteList = () => {\r\n    const appState = useContext(AppContext);\r\n    let [artists, setArtists] = useState([] as IFavoriteListItemDetailed[]);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const removeArtistFromFavoriteList = (index: number) => {\r\n        console.log(\"unsubscribe\");\r\n        appState.updateUserFavoriteArtistList(appState);\r\n        artists = artists.filter(i => i.id !== artists[index].id);\r\n        setArtists([...artists]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const loadData = async () => {\r\n            const response = await BaseService.getAll<IFavoriteListItemDetailed>(\"/favoritelists/following/detailed\",appState.token!);\r\n            console.log(response);\r\n            if (response.ok && response.data) {\r\n                setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n                setArtists(response.data);\r\n            } else {\r\n                setPageStatus({ pageStatus: EPageStatus.Error, statusCode: response.statusCode });\r\n            }\r\n        }\r\n        loadData();\r\n        return () => {\r\n            setArtists([]);\r\n        }\r\n    }, [appState])\r\n\r\n    return (\r\n        <>\r\n            {artists.length > 0 ?\r\n                <>\r\n                    <div>Artists</div>\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th></th>\r\n                                <th>Name</th>\r\n                                <th>Bio</th>\r\n                                <th className=\"followers-number\">Followers</th>\r\n                                <th className=\"follow-button-label\">Unfollow</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {artists.map((item, index) =>\r\n                                <ArtistRowDisplay\r\n                                artist={item.artist}\r\n                                appState={appState}\r\n                                index={index}\r\n                                removeArtistFromFavoriteList={removeArtistFromFavoriteList}\r\n                                key={item.artist.id} \r\n                                />\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </>\r\n                : <div>Your favorite artists list is empty. Add artists to favorites to be able to see them here!</div>}\r\n            <Loader {...pageStatus} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FavoriteList;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { IMusicGenre } from \"../../dto/IMusicGenre\";\r\nimport { IProductFormat } from \"../../dto/IProductFromat\";\r\nimport { IProductType } from \"../../dto/IProductType\";\r\nimport { ITrackResponse } from \"../../dto/ITrack\";\r\nimport { BaseService } from \"../../services/base-service\";\r\n\r\ninterface UploadProductViewProps {\r\n    uploadedTracksIds: ITrackResponse[];\r\n}\r\n\r\ninterface IFormRequiredData {\r\n    productTypes: IProductType[];\r\n    productFormats: IProductFormat[];\r\n    musicGenres: IMusicGenre[];\r\n}\r\n\r\nconst FormREquiredDataInitial: IFormRequiredData = {\r\n    productTypes: [],\r\n    productFormats: [],\r\n    musicGenres: []\r\n}\r\n\r\nexport interface IProductUploadForm {\r\n    title: string;\r\n    image: File | null;\r\n    description: string;\r\n    price: number;\r\n    secondPrice: number | null;\r\n    tracks: ITrackResponse[];\r\n    productTypeId: string;\r\n    musicGenreId: string;\r\n    productFormatId: string;\r\n}\r\n\r\nconst ProductUploadFormInitial: IProductUploadForm = {\r\n    title: '',\r\n    image: null,\r\n    description: '',\r\n    price: 0,\r\n    secondPrice: null,\r\n    tracks: [],\r\n    productTypeId: '',\r\n    musicGenreId: '',\r\n    productFormatId: ''\r\n}\r\n\r\n\r\nconst UploadProductView = (props: UploadProductViewProps) => {\r\n    const appState = useContext(AppContext);\r\n    const history = useHistory();\r\n    const [formData, setFormData] = useState(ProductUploadFormInitial);\r\n    const [formRequiredData, setFormRequiredData] = useState(FormREquiredDataInitial);\r\n\r\n    const loadData = async () => {\r\n        await getData();\r\n        setFormData({ ...formData, tracks: props.uploadedTracksIds })\r\n    }\r\n\r\n    const getData = async (): Promise<void> => {\r\n        const productTypesResponse = await BaseService.getAll<IProductType>('/producttypes');\r\n        const productFromatsResponse = await BaseService.getAll<IProductFormat>('/productformats');\r\n        const musicGenresResponse = await BaseService.getAll<IMusicGenre>('/musicgenres');\r\n        console.log(productTypesResponse, productFromatsResponse, musicGenresResponse);\r\n        \r\n\r\n        if (productTypesResponse.ok && productTypesResponse.data\r\n            && productFromatsResponse.ok && productFromatsResponse.data\r\n            && musicGenresResponse.ok && musicGenresResponse.data)\r\n            setFormRequiredData({ musicGenres: musicGenresResponse.data, productFormats: productFromatsResponse.data, productTypes: productTypesResponse.data });\r\n    }\r\n\r\n    const handleTitleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFormData({ ...formData, title: e.target.value });\r\n    }\r\n\r\n    const handleDescriptionChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFormData({ ...formData, description: e.target.value });\r\n    }\r\n\r\n    const handlePriceChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFormData({ ...formData, price: +e.target.value });\r\n    }\r\n\r\n    const handleSecondPriceChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFormData({ ...formData, secondPrice: +e.target.value });\r\n    }\r\n\r\n    const handleProductFormatChange = (formatId: string) => {\r\n        setFormData({ ...formData, productFormatId: formatId });\r\n    }\r\n\r\n    const handleProductTypeChange = (producTypeId: string) => {\r\n        setFormData({ ...formData, productTypeId: producTypeId });\r\n    }\r\n\r\n    const handleMusicGenreChange = (musicGenreId: string) => {\r\n        setFormData({ ...formData, musicGenreId: musicGenreId });\r\n    }\r\n\r\n    const submitClicked = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        e.preventDefault()\r\n        const response = await BaseService.postProduct('/products', formData, appState.token!);\r\n        if(response.ok && response.data) {\r\n            history.push('/you/products')\r\n        }\r\n        \r\n    }\r\n\r\n    const saveFile = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n        setFormData({\r\n            ...formData, image: e.target.files![0]\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n    \r\n    return (\r\n        <div>\r\n            <h3>Step 2</h3>\r\n            <p>You almost there! Now fill the submission form for your brand new product to get upload it to Identikit!</p>\r\n            <form className=\"form-box\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input type=\"text\" id=\"title\" onChange={e => handleTitleChange(e)} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"description\">Description</label>\r\n                    <input type=\"textarea\" id=\"description\" onChange={e => handleDescriptionChange(e)} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"price\">Price</label>\r\n                    <input type=\"number\" id=\"price\" placeholder={\"0.00\"} onChange={e => handlePriceChange(e)} />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"secondPrice\">SecondPrice</label>\r\n                    <input type=\"number\" id=\"secondPrice\" onChange={e => handleSecondPriceChange(e)} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"musicGenre\">Chooose music genre</label>\r\n                    <select name=\"musicGenre\" id=\"musicGenre\" onChange={(e) => handleMusicGenreChange(e.target.value)}>\r\n                        <option value=\"\"></option>\r\n                        {formRequiredData.musicGenres.map(genre =>\r\n                            <option key={genre.id} value={genre.id}>{genre.genre}</option>\r\n                        )}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"productType\">Chooose product type</label>\r\n                    <select name=\"productType\" id=\"productType\" onChange={(e) => handleProductTypeChange(e.target.value)}>\r\n                        <option value=\"\"></option>\r\n                        {formRequiredData.productTypes.map(type =>\r\n                            <option key={type.id} value={type.id}>{type.type}</option>\r\n                        )}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"productFormat\">Chooose product format</label>\r\n                    <select name=\"productFormat\" id=\"productFormat\" onChange={(e) => handleProductFormatChange(e.target.value)}>\r\n                        <option value=\"\"></option>\r\n                        {formRequiredData.productFormats.map(format =>\r\n                            <option key={format.format} value={format.id}>{format.format}</option>\r\n                        )}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"image\">Select a cover for your product</label>\r\n                    <em>If not chosen, your profile pic will be set!</em>\r\n                    <br />\r\n                    <input\r\n                        type=\"file\"\r\n                        id=\"image\"\r\n                        name=\"image\"\r\n                        accept=\"image/*\"\r\n                        onChange={saveFile}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <button\r\n                        onClick={e => submitClicked(e)}\r\n                        type=\"submit\"\r\n                        className=\"btn btn-secondary\"\r\n                    >\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadProductView;","import { ITrackAdd } from \"../../dto/ITrack\";\r\nimport './TrackInfoComponent.css';\r\n\r\ninterface ITrackInfoComponentProps {\r\n    index: number;\r\n    trackData: ITrackAdd;\r\n    handleTrackTitleUpdate: Function;\r\n    handleTrackNumberUpdate: Function;\r\n    removeAddedFile: Function;\r\n}\r\n\r\nconst TrackInfoComponent = (props: ITrackInfoComponentProps) => {\r\n    const handleClick = (e: any) => {\r\n        e.preventDefault();\r\n        props.removeAddedFile();\r\n    }\r\n\r\n    const handleTrackNumberUpdate = (e: any) => {\r\n        props.handleTrackNumberUpdate(e.target.value, props.index);\r\n    }\r\n\r\n    const handleTrackTitleUpdate = (e: any) => {\r\n        props.handleTrackTitleUpdate(e.target.value, props.index);\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td className=\"track-number-field\">\r\n                <input\r\n                    type=\"number\"\r\n                    value={props.trackData.trackNumber}\r\n                    onChange={e => handleTrackNumberUpdate(e)}\r\n                />\r\n            </td>\r\n            <td className=\"track-title-field\">\r\n                <input\r\n                    type=\"text\"\r\n                    minLength={1}\r\n                    value={props.trackData.title}\r\n                    onChange={e => handleTrackTitleUpdate(e)}\r\n                />\r\n            </td>\r\n            <td>\r\n                <button onClick={e => handleClick(e)} className=\"follow-button remove\"/>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default TrackInfoComponent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { ITrackAdd } from \"../../dto/ITrack\";\r\nimport TrackInfoComponent from \"./TrackInfoComponent\";\r\n\r\nconst TrackList = (props: { tracks: ITrackAdd[], updateTracks: Function }) => {\r\n    const [tracks, setTracks] = useState([] as ITrackAdd[]);\r\n\r\n    const removeAddedFile = (title: string) => {\r\n        const filteredTracks = tracks.filter(t => t.title !== title);\r\n        props.updateTracks([...filteredTracks]);\r\n    }\r\n\r\n    const handleTrackTitleUpdate = (title: string, index: number) => {\r\n        tracks[index].title = title;\r\n        props.updateTracks(tracks);\r\n    }\r\n\r\n    const handleTrackNumberUpdate = (trackNumber: string, index: number) => {\r\n        tracks[index].trackNumber = trackNumber;\r\n        props.updateTracks(tracks);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTracks(props.tracks);\r\n    }, [tracks, props])\r\n\r\n    return (\r\n        <>\r\n            {tracks.length > 0 ?\r\n                <>\r\n                    <p>You can change track number and track title</p>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Track number</th>\r\n                                <th>Track name</th>\r\n                                <th>Remove</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tracks.map((track, index) =>\r\n                                <TrackInfoComponent\r\n                                key={index}\r\n                                index={index} \r\n                                trackData={track}\r\n                                handleTrackNumberUpdate={handleTrackNumberUpdate} \r\n                                handleTrackTitleUpdate={handleTrackTitleUpdate} \r\n                                removeAddedFile={removeAddedFile} />\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </>\r\n                : null}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TrackList;","import React from \"react\"\r\nimport { ITrackAdd } from \"../../dto/ITrack\"\r\nimport TrackList from \"../track/TracksList\"\r\nimport { IProductUploadState } from \"./ProductUploadView\"\r\n\r\ninterface IUploadTrackViewProps {\r\n    tracksState: IProductUploadState;\r\n    saveFilesToState: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    uploadClicked: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n    updateTracksInState: (tracksToUpload: ITrackAdd[]) => void;\r\n}\r\n\r\nconst UploadTracksView = (props: IUploadTrackViewProps) => {\r\n    return (\r\n    <div>\r\n        <h3>Step 1</h3>\r\n        <p>If you want to upload your brand new tracks as a product first add them</p>\r\n        <form className=\"form-box\">\r\n            <div className=\"form-group\">\r\n                <p>Supported type is mp3!</p>\r\n                <label htmlFor=\"files\" className=\"add-track-button\">Choose files\r\n                <input type=\"file\"\r\n                        accept=\"audio/mpeg3\"\r\n                        onChange={props.saveFilesToState}\r\n                        multiple\r\n                        hidden\r\n                        id=\"files\"\r\n                    />\r\n                </label>\r\n            </div>\r\n            <br />\r\n            <TrackList tracks={props.tracksState.tracksToUpload} updateTracks={props.updateTracksInState} />\r\n            {props.tracksState.tracksToUpload.length > 0 ?\r\n                <button\r\n                    onClick={e => props.uploadClicked(e)}\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                >\r\n                    Upload!\r\n            </button>\r\n                : null}\r\n        </form>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default UploadTracksView;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { ITrackAdd, ITrackResponse } from \"../../dto/ITrack\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EProductUploadState } from \"./EProductUploadState\";\r\nimport \"./ProductUploadView.css\"\r\nimport UploadProductView from \"./UploadProductView\";\r\nimport UploadTracksView from \"./UploadTracksView\";\r\n\r\n// page status: Loading... => Happy, show data | Error\r\n\r\nexport interface IProductUploadState {\r\n    tracksToUpload: ITrackAdd[];\r\n    uploadedTracksIds: ITrackResponse[];\r\n}\r\n\r\nconst ProductUpload = () => {\r\n    const appState = useContext(AppContext);\r\n    const [tracksState, setTracksState] = useState({ tracksToUpload: [], uploadedTracksIds: [] } as IProductUploadState);\r\n    const [uploadState, setUploaded] = useState(EProductUploadState.NotUploaded);\r\n\r\n    /**\r\n     * Method to set added tracks to state.\r\n     * @param e ChangeEvent from input type file.\r\n     */\r\n    const saveFilesToState = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n        const files = e.target.files as FileList;\r\n\r\n        const mappedFiles: ITrackAdd[] = Array.from(files).map(t => {\r\n            const track: ITrackAdd = {\r\n                title: t.name,\r\n                trackNumber: \"\",\r\n                trackFile: t\r\n            }\r\n            return track;\r\n        })\r\n\r\n        if (tracksState.tracksToUpload.length > 0) {\r\n            setTracksState({ ...tracksState, tracksToUpload: [...tracksState.tracksToUpload, ...mappedFiles] });\r\n        } else {\r\n            setTracksState({ ...tracksState, tracksToUpload: [...mappedFiles] })\r\n        }\r\n    }\r\n    /**\r\n     * Upload button event handler, after click all tracks in state are uploaded to server and as a response server sends uploaded tracks ids.\r\n     * @param e Button event click.\r\n     */\r\n    const uploadClicked = async (e: React.MouseEvent<HTMLButtonElement>) => {\r\n        e.preventDefault();\r\n        console.log(\"Uploading tracks to server\");\r\n        const uploadedTracksIds = await uploadTracksToServer();\r\n        console.log(\"Tracks are uploaded\", uploadedTracksIds);\r\n        setTracksState({ ...tracksState, tracksToUpload: [], uploadedTracksIds: uploadedTracksIds });\r\n        setUploaded(EProductUploadState.Uploaded);\r\n    }\r\n\r\n    /**\r\n     * Method to upload tracks to server.\r\n     */\r\n    async function uploadTracksToServer(): Promise<ITrackResponse[]> {\r\n        let receivedTrackIdsFromResponse = [] as ITrackResponse[];\r\n        tracksState.tracksToUpload.forEach(async (track) => {\r\n            const response = await BaseService.postTracks('/tracks', track, appState.token!);\r\n            if (response.ok) {\r\n                const receivedTrack = response.data as ITrackResponse;\r\n                receivedTrackIdsFromResponse.push(receivedTrack);\r\n            }\r\n        })\r\n        return receivedTrackIdsFromResponse;\r\n    }\r\n\r\n    /**\r\n     * Handler method to update tracks if track info is changed.\r\n     * @param tracksToUpload Updated list of tracks.\r\n     */\r\n    const updateTracksInState = (tracksToUpload: ITrackAdd[]) => {\r\n        setTracksState({ ...tracksState, tracksToUpload: tracksToUpload })\r\n    }\r\n\r\n    const returnView = () => {\r\n        if (uploadState === EProductUploadState.NotUploaded) \r\n        return <UploadTracksView \r\n        tracksState={tracksState}\r\n        saveFilesToState={saveFilesToState}\r\n        uploadClicked={uploadClicked}\r\n        updateTracksInState={updateTracksInState}\r\n        />\r\n        else if (uploadState === EProductUploadState.Uploaded) \r\n        return <UploadProductView uploadedTracksIds={tracksState.uploadedTracksIds}/>\r\n        else if (uploadState === EProductUploadState.OnNetwork)\r\n        return <div>Yo!</div>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {returnView()}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProductUpload;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { AppContext } from \"../../context/AppContext\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { IUserLikeListItemDetailed } from \"../../dto/IUserLike\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ServerUrl } from \"../../configuration\";\r\n\r\n\r\nexport interface IProductRowProps {\r\n    userLikeItem: IUserLikeListItemDetailed;\r\n    updateProductsList: Function;\r\n    removeProductFromLikedList?: Function\r\n}\r\n\r\nexport const ProductRowDisplay = (props: IProductRowProps) => {\r\n    const appState = useContext(AppContext);\r\n\r\n    const removeProductFromLikedProductList = async () => {\r\n        console.log(\"remove from liked products\");\r\n        const response = await BaseService.delete('/userlikes/', appState.token!, [props.userLikeItem.id]);\r\n        if (response.ok && response.data) {\r\n            /* Update current list */\r\n            props.updateProductsList(props.userLikeItem.id)\r\n            /* Update state lsit */\r\n            appState.updateUserLikedProductsList(appState);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td><img className=\"img-small\" src={ServerUrl + '/images/' + props.userLikeItem.product.imagePath} alt=\"\"></img></td>\r\n            <td><Link to={'/artists/' + props.userLikeItem.artistName + \"/products/\" + props.userLikeItem.product.title}>{props.userLikeItem.product.title}</Link></td>\r\n            <td>{props.userLikeItem.product.description}</td>\r\n            <td>Likes: {props.userLikeItem.product.likes}</td>\r\n            <td className=\"follow-button-container\">\r\n                <button onClick={removeProductFromLikedProductList}>Dislike</button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst LikedProductsList = () => {\r\n    const appState = useContext(AppContext);\r\n    let [products, setProducts] = useState([] as IUserLikeListItemDetailed[]);\r\n\r\n    const handleProductRemove = (itemId: string) => {\r\n        const filteredList = products.filter(p => p.id !== itemId);\r\n        setProducts([...filteredList]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const loadData = async () => {\r\n            const response = await BaseService.getAll<IUserLikeListItemDetailed>(\"/userlikes/likes/detailed\", appState.token!);\r\n            console.log(response);\r\n            if (response.ok && response.data) {\r\n                setProducts(response.data);\r\n            }\r\n        }\r\n        loadData();\r\n        return () => {\r\n            setProducts([]);\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {products.length > 0 ?\r\n                <>\r\n                    <div>Products</div>\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th></th>\r\n                                <th>Title</th>\r\n                                <th>Description</th>\r\n                                <th className=\"followers-number\">Likes</th>\r\n                                <th className=\"follow-button-label\">Dislike</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {products.map(item =>\r\n                                <ProductRowDisplay key={item.id} userLikeItem={item} updateProductsList={handleProductRemove} />\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </>\r\n                : <div>Your liked products list is empty. Like artist products to be able to see them here!</div>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LikedProductsList;\r\n","import { useEffect, useState } from \"react\";\r\nimport { IProductDetailed } from \"../../dto/IProduct\";\r\nimport { BaseService } from \"../../services/base-service\";\r\n\r\ninterface IProductRowDisplay {\r\n    product: IProductDetailed;\r\n}\r\n\r\nconst ProductRowDisplay = (props: IProductRowDisplay) => {\r\n    return (\r\n        <div>\r\n            <div>{props.product.title}</div>\r\n            <div>{props.product.description}</div>\r\n            <div>{props.product.format}</div>\r\n            <div>{props.product.title}</div>\r\n        </div>      \r\n    );\r\n}\r\n\r\nconst ProductManageView = () => {\r\n    const [products, setProducts] = useState([] as IProductDetailed[])\r\n\r\n    useEffect(() => {\r\n        const loadData = async () => {\r\n            const response = await BaseService.getAll<IProductDetailed>('/products/owner')\r\n            if (response.ok && response.data) {\r\n                setProducts(response.data)\r\n            }\r\n        }\r\n\r\n        loadData();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div>Manage your products</div>\r\n            <div>\r\n                {products.map(p =>\r\n                    <ProductRowDisplay product={p} />\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProductManageView;","import { IArtistSimple } from \"./IArtist\";\r\nimport { IComment } from \"./IComment\";\r\nimport { ITrack } from \"./ITrack\";\r\n\r\nexport interface IProduct {\r\n    id: string;\r\n    title: string;\r\n    description?: string;\r\n    genre?: string;\r\n    format?: string;\r\n    type?: string;\r\n    imagePath: string;\r\n    duration: string;\r\n    price: number;\r\n    likes: number;\r\n    uploadDate: string;\r\n    tracks: ITrack[]\r\n}\r\n\r\nexport interface IProductDetailed {\r\n    id: string;\r\n    artist: IArtistSimple;\r\n    title: string;\r\n    description: string;\r\n    genre: string;\r\n    format: string;\r\n    type: string;\r\n    imagePath: string;\r\n    duration: string;\r\n    price: number;\r\n    likes: number;\r\n    uploadDate: string;\r\n    comments: IComment[];\r\n    tracks: ITrack[]\r\n}\r\n\r\nexport const initialProductDetailed: IProductDetailed = {\r\n    id: \"\",\r\n    artist: {id: \"\", name: \"\"} as IArtistSimple,\r\n    title: \"\",\r\n    description: \"\",\r\n    genre: '',\r\n    format: '',\r\n    type: '',\r\n    imagePath: \"\",\r\n    duration: \"\",\r\n    price: 0,\r\n    likes: 0,\r\n    uploadDate: \"\",\r\n    comments: [] as IComment[],\r\n    tracks: [] as ITrack[]\r\n}\r\n\r\nexport interface IProductWithoutTracks {\r\n    id: string;\r\n    title: string;\r\n    description: string;\r\n    imagePath: string;\r\n    likes: number;\r\n    uploadDate: string;\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport audioPlayer, { initialPlayer } from \"../../components/AudioPlayer\";\r\nimport CommentSection from \"../../components/CommentSection\";\r\nimport Loader from \"../../components/Loader\";\r\nimport { initialProductDetailed, IProductDetailed } from \"../../dto/IProduct\";\r\nimport { BaseService } from \"../../services/base-service\";\r\nimport { EPageStatus } from \"../../types/EPageStatus\";\r\nimport { IRouteProductDetails } from \"../../types/IRouteId\";\r\nimport { ProductRowDisplay } from \"../artist/ArtistDetailsView\";\r\nimport { EPlayerState } from \"../artist/EPlayerState\";\r\nimport \"./ProductDetailedView.css\"\r\n\r\nconst ProductDetailedView = () => {\r\n    const data = useParams() as IRouteProductDetails;\r\n    const [product, setProduct] = useState(initialProductDetailed);\r\n    const [player, setPlayer] = useState(audioPlayer);\r\n    const [playerState, setPlayerState] = useState(EPlayerState.OnPause);\r\n    const [pageStatus, setPageStatus] = useState({ pageStatus: EPageStatus.Loading, statusCode: -1 });\r\n\r\n    const handlePlay = (productIndex: number, trackIndex: number, plays: number) => {\r\n        console.log(\"clicked\");\r\n        product.tracks[trackIndex].playCount = plays;\r\n        setProduct({ ...product });\r\n    }\r\n\r\n    const handleLike = (productIndex: number, likes: number) => {\r\n        product.likes = likes;\r\n        setProduct({ ...product });\r\n    }\r\n\r\n    useEffect(() => {\r\n        const loadData = async () => {\r\n            const response = await BaseService.get<IProductDetailed>('/products/' + data.artistName + \"/\" + data.productTitle);\r\n            if (response.ok && response.data) {\r\n                const data = response.data;\r\n                setPageStatus({ pageStatus: EPageStatus.OK, statusCode: 0 });\r\n                setProduct(data);\r\n            } else {\r\n                setPageStatus({ pageStatus: EPageStatus.Error, statusCode: response.statusCode });\r\n            }\r\n        }\r\n        if (product.id === '') loadData();\r\n        return () => {\r\n            player.pause()\r\n            setPlayer(initialPlayer);\r\n            setProduct(initialProductDetailed);\r\n            setPlayerState(EPlayerState.OnPause);\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"product-details-comment-section\">\r\n                <ProductRowDisplay\r\n                    artist={product.artist}\r\n                    handlePlay={handlePlay}\r\n                    handleLike={handleLike}\r\n                    product={product}\r\n                    player={player}\r\n                    playerState={playerState}\r\n                    setPlayerState={setPlayerState}\r\n                    key={product.id} />\r\n                {product.id !== '' ? <CommentSection product={product} /> : null}\r\n            </div> \r\n            <Loader {...pageStatus} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProductDetailedView;\r\n","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport HomeIndex from './containers/home/HomePageView';\nimport ArtistIndex from './containers/artist/ArtistDiscoverView';\nimport ArtistCreate from './containers/artist/BecomeAnArtistView';\nimport ArtistDetails from './containers/artist/ArtistDetailsView';\nimport ArtistEdit from './containers/artist/ArtistEdit';\nimport ArtistDelete from './containers/artist/ArtistDelete';\nimport CartDetails from './containers/cart/UserCartView'\nimport Login from './containers/account/Login';\nimport Register from './containers/account/Register';\nimport Page404 from './containers/Page404';\nimport PageForm from './containers/PageForm';\nimport { AppContextProvider, IAppState, initialAppState } from './context/AppContext';\nimport jwt_decode from \"jwt-decode\";\nimport { BaseService } from './services/base-service';\nimport { IFavoriteListItem } from './dto/IFavoriteList';\nimport Profile from './containers/account/Profile';\nimport FavoriteList from './containers/account/FavoriteList';\nimport { ILoginResponse } from './types/ILoginResponse';\nimport { IRegisterResponse } from './types/IRegisterResponse';\nimport ProductUpload from './containers/product/ProductUploadView';\nimport { IUserLikeListItem } from './dto/IUserLike';\nimport LikedProducts from './containers/account/LikedProducts';\nimport { ICartSimple } from './dto/ICart';\nimport ProductManageView from './containers/product/ProductManageView';\nimport ProductDetailedView from './containers/product/ProductDetailedView';\n\nfunction App() {\n    const setAuthInfo = async (loginResponse: ILoginResponse | IRegisterResponse): Promise<void> => {\n        console.log('setAuthInfo');\n        let isArtist = loginResponse.artistId !== null;\n\n        /* Security???\n        if (loginResponse.artistId) {\n            isArtist = setUserRole(loginResponse.jwt) === 'Artist';\n        }\n        */\n\n        let favoriteList = [] as IFavoriteListItem[];\n        let userLikedProducts = [] as IUserLikeListItem[];\n        if (loginResponse.token) {\n            favoriteList = await getUserFavorites(loginResponse.token);\n            userLikedProducts = await getUserLikedProducts(loginResponse.token);\n        }\n\n        setAppState({\n            ...appState, token: loginResponse.token,\n            firstName: loginResponse.firstName,\n            lastName: loginResponse.lastName,\n            cart: { total: loginResponse.total, quantity: loginResponse.quantity },\n            artistId: loginResponse.artistId,\n            isArtist: isArtist,\n            favorites: favoriteList,\n            likedProducts: userLikedProducts\n        });\n    }\n\n    const setUserRole = (token: string) => {\n        if (token === null) return;\n        const dataFromToken: any = jwt_decode(token);\n        const role = dataFromToken[Object.keys(dataFromToken)[4]];\n        return role;\n    }\n\n    const getUserFavorites = async (token: string): Promise<IFavoriteListItem[]> => {\n        console.log(\"Getting users favorite artists\");\n        const response = await BaseService.getAll<IFavoriteListItem>('/favoritelists/following/ids', token!);\n        if (response.ok && response.data) {\n            return response.data;\n        }\n        return [];\n    }\n\n    const getUserLikedProducts = async (token: string): Promise<IUserLikeListItem[]> => {\n        console.log(\"Getting users liked products\");\n        const response = await BaseService.getAll<IUserLikeListItem>('/userlikes/likes/ids', token!);\n        console.log(response);\n        if (response.ok && response.data) {\n            return response.data;\n        }\n        return [];\n    }\n\n    const updateUserFavoriteArtistList = async (curState: any): Promise<void> => {\n        console.log(\"Updating user list of favorites\");\n        const response = await BaseService.getAll<IFavoriteListItem>('/favoritelists/following/ids', curState.token!);\n        if (response.ok && response.data) {\n            console.log(\"List of user favorites is updated\");\n            setAppState({ ...curState, favorites: response.data }!);\n        }\n    }   \n\n    const updateUserLikedProductsList = async (curState: any): Promise<void> => {\n        console.log(\"Updating user list of liked products\");\n        const response = await BaseService.getAll<IUserLikeListItem>('/userlikes/likes/ids', curState.token!);\n        if (response.ok && response.data) {\n            setAppState({ ...curState, likedProducts: response.data }!);\n        }\n    }\n\n    const updateUserCart = async (curState: IAppState) => {\n        console.log(\"Updating user cart\");\n        const response = await BaseService.get<ICartSimple>('/carts/status', curState.token!);\n        if (response.ok && response.data) {\n            console.log(response);\n            setAppState({ ...curState, cart: response.data }!);\n        }\n    }\n\n    const promoteToTempArtist = (curState: any, artistId: string): void => {\n        setAppState({ ...curState, isArtist: true, artistId: artistId });\n    }\n\n    const clearAppState = (curState: IAppState) => {\n        setAppState({ ...curState, token: null, firstName: '', lastName: '', cart: {total: 0, quantity: 0}, favorites: [], likedProducts: [], isArtist: false });\n    }\n\n    const [appState, setAppState] = useState({\n        ...initialAppState,\n        setAuthInfo,\n        setUserRole,\n        getUserFavorites,\n        getUserLikedProducts,\n        updateUserFavoriteArtistList,\n        updateUserLikedProductsList,\n        updateUserCart,\n        promoteToTempArtist,\n        clearAppState\n    } as IAppState);\n\n    return (\n        <>\n            <AppContextProvider value={appState}>\n                <div className=\"container-lg\">\n                    <Header />\n                    <main role=\"main\">\n                        <div className=\"view\">\n                            <Switch>\n                                <Route exact path=\"/\" component={HomeIndex} />\n\n                                <Route exact path=\"/account/login\" component={Login} />\n                                <Route exact path=\"/account/register\" component={Register} />\n                                <Route exact path=\"/you/profile\" render={() => appState.token ? (<Profile />) : (<Redirect to=\"/account/login\" />)} />\n\n                                <Route exact path=\"/artists\" component={ArtistIndex} />\n                                <Route exact path=\"/artists/create/\" component={ArtistCreate} />\n                                <Route exact path=\"/artists/:alias\" component={ArtistDetails} />\n                                <Route exact path=\"/artists/:artistName/products/:productTitle\" component={ProductDetailedView} />\n                                <Route exact path=\"/artists/edit/:id\" component={ArtistEdit} />\n                                <Route exact path=\"/artists/delete/:id\" component={ArtistDelete} />\n\n                                <Route exact path={\"/products/upload\"} render={() => appState.token ? (<ProductUpload />) : (<Redirect to=\"/account/login\" />)} />\n                                <Route exact path={\"/you/products\"} render={() => appState.token ? (<ProductManageView />) : (<Redirect to=\"/account/login\" />)} />\n                                <Route exact path={\"/you/favorites\"} render={() => appState.token ? (<FavoriteList />) : (<Redirect to=\"/account/login\" />)} />\n                                <Route exact path={\"/you/likes\"} render={() => appState.token ? (<LikedProducts />) : (<Redirect to=\"/account/login\" />)} />\n                                <Route exact path={\"/cart\"} render={() => appState.token ? (<CartDetails />) : (<Redirect to=\"/account/login\" />)} />\n\n\n                                <Route path=\"/form\" component={PageForm} />\n\n                                <Route component={Page404} />\n                            </Switch>\n                        </div>\n                    </main>\n                </div>\n                <Footer />\n            </AppContextProvider>\n        </>\n    );\n}\n\nexport default App;\n","import 'jquery';\nimport 'popper.js';\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport './assets/site.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Router>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}